<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/09/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>安装kali linux后的准备操作</title>
    <url>/2021/09/06/2021-09-06/</url>
    <content><![CDATA[<h1 id="安装kali-linux后的准备操作"><a href="#安装kali-linux后的准备操作" class="headerlink" title="安装kali linux后的准备操作"></a>安装kali linux后的准备操作</h1><p>kali linux使用前的准备操作，包括基础使用提示，换源，中文、日文输入法配置，vim内外复制粘贴，python pip安装，docker安装，蚁剑安装，burpsuit换专业版等，部分待补充</p>
<span id="more"></span>

<p>环境：</p>
<ol>
<li>VMware Workstation 16 pro version 16.0.0</li>
<li>kali-linux-2021.1-vmware-amd64.zip镜像，来源：<a href="https://www.kali.org/get-kali/#kali-virtual-machines">https://www.kali.org/get-kali/#kali-virtual-machines</a><br>镜像zip文件解压后用VMware打开即可使用。<br>kali安装可参考：<a href="https://www.kali.org/docs/virtualization/install-vmware-guest-vm/">https://www.kali.org/docs/virtualization/install-vmware-guest-vm/</a></li>
</ol>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="基础使用知识"><a href="#基础使用知识" class="headerlink" title="基础使用知识"></a>基础使用知识</h2><ol>
<li>登录用户名和密码：kali 和 kali</li>
<li>切换管理员：sudo su</li>
<li>呼出终端快捷键： ctrl + alt + t</li>
<li>终端中复制黏贴快捷键： ctrl + shift + c / v (多按一个shift) （参考：<a href="https://blog.csdn.net/SleepBoyer/article/details/86429970">zsh 常用快捷键</a>）</li>
<li>git克隆项目仓库：git clone + 链接地址</li>
<li>终端下人性化详细列出当前目录下内容命令：ls -alh，或ll -ah, 或la -hl（注意：这里显示的文件夹大小不包括文件夹内的内容，所以一般只是4k大小。）</li>
<li>终端查看文件夹第一级内容的磁盘占用：du  -ahd 1 ( 参考：<a href="https://www.cnblogs.com/wanng/p/linux-du-command.html">Linux 下du命令详解</a>和<a href="http://c.biancheng.net/linux/du.html">Linux du命令</a> )</li>
<li>查看系统资源被进程占用的情况：top (进动态界面后按 h 查看帮助)</li>
<li>查看系统中进程的信息：ps</li>
<li>vim显示行号：” :set nu “ (其他vim操作参考<a href="https://www.runoob.com/linux/linux-vim.html">Linux vi/vim | 菜鸟教程</a>)</li>
<li>ssh远程连接：ssh -l 用户名 -p 端口 地址 或 ssh 用户名@地址 -p 端口（参考：<a href="https://cloud.tencent.com/developer/article/1594881">ssh 命令</a>）</li>
<li>curl命令使用：curl -X POST -d ‘param1=hello&amp;param2=world’ URL（参考：<a href="https://blog.csdn.net/wuhuagu_wuhuaguo/article/details/90764856">Linux curl命令最全详解</a>）</li>
<li>避免远程连接 Linux 关闭终端后程序终止，参考：<a href="https://blog.csdn.net/qq_34243930/article/details/106771285">Linux–screen 命令，远程必备</a></li>
<li>安装kali工具：<a href="https://cloud.tencent.com/developer/article/1035313">Kali Linux metapackages 工具包</a></li>
<li>其他工具可参考：<a href="https://zing.gitbooks.io/kali-lunix/content/">Kali Linux 工具使用中文说明书</a></li>
</ol>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="软件更新换源"><a href="#软件更新换源" class="headerlink" title="软件更新换源"></a>软件更新换源</h2><p>参考：<br><a href="https://www.cnblogs.com/u-damowang1/p/14729017.html">Kali2021配置apt换源</a><br><a href="http://smartadmin.com.cn/smartadmin/show-9979.html">Ubuntu更换阿里源以及由于没有公钥，无法验证下列签名错误</a></p>
<p>添加源，终端输入：<br>sudo vim /etc/apt/sources.list</p>
<p>注释掉自带源，下列源选择部分添加：</p>
<blockquote>
<p># 官方源<br># deb <a href="http://http.kali.org/kali">http://http.kali.org/kali</a> kali-rolling main non-free contrib<br># deb-src <a href="http://http.kali.org/kali">http://http.kali.org/kali</a> kali-rolling main non-free contrib<br># 中科大源<br>deb <a href="http://mirrors.ustc.edu.cn/kali">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib<br>deb-src <a href="http://mirrors.ustc.edu.cn/kali">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib<br># 阿里云源<br>deb <a href="http://mirrors.aliyun.com/kali">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib<br>deb-src <a href="http://mirrors.aliyun.com/kali">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib<br># 清华大学源<br># deb <a href="http://mirrors.tuna.tsinghua.edu.cn/kali">http://mirrors.tuna.tsinghua.edu.cn/kali</a> kali-rolling main contrib non-free<br># deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/kali">https://mirrors.tuna.tsinghua.edu.cn/kali</a> kali-rolling main contrib non-free<br># 浙大源<br># deb <a href="http://mirrors.zju.edu.cn/kali">http://mirrors.zju.edu.cn/kali</a> kali-rolling main contrib non-free<br># deb-src <a href="http://mirrors.zju.edu.cn/kali">http://mirrors.zju.edu.cn/kali</a> kali-rolling main contrib non-free<br># 东软大学源<br># deb <a href="http://mirrors.neusoft.edu.cn/kali">http://mirrors.neusoft.edu.cn/kali</a> kali-rolling/main non-free contrib<br># deb-src <a href="http://mirrors.neusoft.edu.cn/kali">http://mirrors.neusoft.edu.cn/kali</a> kali-rolling/main non-free contrib<br># 新加坡kali源<br># deb <a href="http://mirror.nus.edu.sg/kali/kali/">http://mirror.nus.edu.sg/kali/kali/</a> kali main non-free contrib<br># deb-src <a href="http://mirror.nus.edu.sg/kali/kali/">http://mirror.nus.edu.sg/kali/kali/</a> kali main non-free contrib<br># 163 Kali源<br># deb <a href="http://mirrors.163.com/debian">http://mirrors.163.com/debian</a> wheezy main non-free contrib<br># deb-src <a href="http://mirrors.163.com/debian">http://mirrors.163.com/debian</a> wheezy main non-free contrib</p>
</blockquote>
<p>如果使用源没有获取公钥认证，apt-get update可能报错，安装docker等时可能出现网络问题，如:</p>
<blockquote>
<p>E: The repository ‘<a href="https://download.docker.com/linux/debian">https://download.docker.com/linux/debian</a> kali-rolling Release’ does not have a Release file.<br>N: Updating from such a repository can’t be done securely, and is therefore disabled by default.<br>N: See apt-secure(8) manpage for repository creation and user configuration details.</p>
</blockquote>
<blockquote>
<p>The repository ‘<a href="https://download.docker.com/linux/debian">https://download.docker.com/linux/debian</a> kali-rolling Release’ does not have a Release file.</p>
</blockquote>
<p>可以参考<a href="http://smartadmin.com.cn/smartadmin/show-9979.html">Ubuntu更换阿里源以及由于没有公钥，无法验证下列签名错误</a>进行签名操作，虽然这样只能解决部分问题。</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="中文输入法"><a href="#中文输入法" class="headerlink" title="中文输入法"></a>中文输入法</h2><p>参考：<a href="https://cloud.tencent.com/developer/article/1196809">https://cloud.tencent.com/developer/article/1196809</a></p>
<p>终端输入<br>sudo apt-get install ibus ibus-pinyin</p>
<p>安装完后右上角出现en图标，即是ibus，右键preference，input method里add，Chinese，选择Pinyin输入法，另一个是台湾的注音输入法。添加后重启(reboot或init 6)，使用 ctrl + space(空格) 切换输入法即可</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="日文输入法"><a href="#日文输入法" class="headerlink" title="日文输入法"></a>日文输入法</h2><p>参考：<a href="https://cocolofun.co.jp/linux-upgrade/">https://cocolofun.co.jp/linux-upgrade/</a></p>
<p>终端输入：<br>sudo apt-get install ibus ibus-anthy</p>
<p>类似于安装中文输入法：安装完后右上角出现en图标，即是ibus，右键preference，input method里add，Japanese，选择Anthy输入法。添加后重启(reboot或init 6)，使用 ctrl + space(空格) 切换输入法即可。</p>
<p>打字时先输入读音，然后按空格，就会出现候选字。</p>
<p>若要切换平假名、片假名，需要另外设置：<br>同样ibus，右键preference，input method里选择Japanese - Anthy，然后点击右边的preference，Key Binding里 hiragana_mode 即是平假名，双击，然后点一个三个点的按钮，输完快捷键后记得点add，这里可以设置快捷键为ctrl + caps；katakana_mode 即是片假名，设置快捷键为alt + caps。<br>之后便可使用快捷键切换平片假名。</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="vim-的剪贴板与系统互通"><a href="#vim-的剪贴板与系统互通" class="headerlink" title="vim 的剪贴板与系统互通"></a>vim 的剪贴板与系统互通</h2><p>参考：<br><a href="https://www.zhihu.com/question/19863631/answer/1821367137">将 Vim 剪贴板里面的东西粘贴到 Vim 之外的地方</a><br><a href="https://www.cnblogs.com/gmpy/p/11177719.html">vim与系统剪切板之间的复制粘贴</a></p>
<p>发现一个较简便的办法，可以直接复制较少的内容：</p>
<ul>
<li>将vim里内容复制到外头：</li>
</ul>
<p><strong>在vim里按住ctrl + shift不放, 然后移动鼠标选取, 之后正常的复制粘贴即可，单按shift也行</strong></p>
<ul>
<li>如果要将外部内容复制到vim里，和正常一样，输入模式按ctrl + shift + v即可。</li>
</ul>
<p>麻烦的办法：<br>vim打开文件后不能将其中内容复制复制到vim编辑器外，需要安装vim-gtk或vim-gnome，增加一个关联系统剪切板的 “ + 寄存器 ” ，保存在这个寄存器中的内容可以被系统其他程序访问，也可以通过这个寄存器访问其他程序保存到剪切板中的内容。</p>
<p>安装输入：<br>sudo apt-get install vim-gtk 或 vim-gnome</p>
<p>如果要从vim复制到系统剪切版，vim中按v进入可视化模式，然后输入双引号、加号、y，也可使用其他命令快捷复制多行等：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;+y</span><br></pre></td></tr></table></figure>
<p>如果要从外部文件(系统剪切版)粘帖到vim，输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;+p</span><br></pre></td></tr></table></figure>

<p>注：查看 vim 是否已经支持 clipboard 剪贴板与系统互通功能<br>终端输入： vim –version | grep clipboard<br>如果有 +clipboard 则支持，如果显示的是 -clipboard 说明不支持。</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="python-pip安装"><a href="#python-pip安装" class="headerlink" title="python pip安装"></a>python pip安装</h2><p>参考：<br><a href="https://blog.csdn.net/xiao_yi_xiao/article/details/118346810">kali linux2021 安装pip</a><br><a href="https://blog.csdn.net/weixin_40614261/article/details/90023807">site-packages 和 dist-packages的区别，不同用户装第三方库的路径</a><br><a href="https://zhuanlan.zhihu.com/p/33546077">什么是 .bashrc</a><br><a href="https://blog.csdn.net/qq_36148847/article/details/79261067">linux 解决 “ command not found: shopt “的 “~/.bashrc” 配置问题</a><br><a href="https://www.runoob.com/w3cnote/python-pip-install-usage.html">pip 安装与使用</a><br><a href="https://blog.csdn.net/taoerchun/article/details/52213822">export命令详解</a></p>
<p>kali 自带 python2 和 python3，但是不能直接使用pip来安装库，是否自带pip有待商榷。何况还需要pip2和pip3来分别下载python2、3的库</p>
<ol>
<li>安装python3对应的pip3：</li>
</ol>
<ul>
<li><p><strong>方法一</strong>：<br>终端输入：sudo apt-get install python3-pip<br>安装后终端直接输入：pip 或 pip3 即可使用<br>注意，已经安装pip2的要输入pip3 -V 查看版本验证，似乎有人安装后仍是pip2，pip3没有被真正安装。如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@kali:~# pip3 -V</span><br><span class="line">pip 19.3.1 from /usr/local/lib/python2.7/dist-packages/pip-19.3.1-py2.7.egg/pip (python 2.7)</span><br></pre></td></tr></table></figure>
<p>正常情况应该类似于：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~]</span><br><span class="line">└─$ pip3 -V</span><br><span class="line">pip 21.2.4 from /home/kali/.local/lib/python3.9/site-packages/pip (python 3.9)</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">┌──(root💀kali)-[/home/kali]</span><br><span class="line">└─# pip3 -V</span><br><span class="line">pip 20.3.4 from /usr/lib/python3/dist-packages/pip (python 3.9)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p><strong>方法二</strong>，此方法需解决环境变量问题<br>终端输入：<br>curl -s <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a> | python3<br>安装完不能直接在终端输入pip来使用，但是可以在 ~/.local/bin 中找到pip，并可在此目录下输入 ./pip 或 ./pip3 来使用。</p>
<ul>
<li>注：方法二不能任意路径输入使用，安装完库时有提示：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">WARNING: The script 你所安装的库等 is installed in &#x27;/home/你的用户名/.local/bin&#x27; which is not on PATH.</span><br><span class="line">Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.</span><br></pre></td></tr></table></figure>
认为是环境变量配置的问题，于是设置pip所在的文件夹到环境变量里：<br>打开 <del>/.bashrc 文件（一种开机自动执行的文件）<br>增加下面一行到文件末尾：<br>export PATH=”/home/自己的username/.local/bin:$PATH”<br>然后输入source \</del>/.bashrc立刻执行，但是执行时乱码报错，发现可能是bash和zsh区别的问题。</li>
</ul>
</li>
</ul>
<p>于是打开~/.zshrc，同样增加下面一行到文件末尾：<br>export PATH=”/home/自己的username/.local/bin:$PATH”<br>然后重新开一个终端让.zshrc文件执行，此时输入export或echo $PATH查看环境变量，发现确实加入了pip所在文件夹的路径，可以直接输入pip使用了。</p>
<ol start="2">
<li><p>安装python2对应的pip：<br>作者未尝试，可参考<a href="https://blog.csdn.net/xiao_yi_xiao/article/details/118346810">kali linux2021 安装pip</a>安装</p>
</li>
<li><p>pip下载库的速度过慢可以换源，参考<a href="https://www.runoob.com/w3cnote/python-pip-install-usage.html">pip换源</a></p>
</li>
<li><p>不同用户安装第三方库的安装路径不同，参考<a href="https://blog.csdn.net/weixin_40614261/article/details/90023807">dist-packages与site-packages</a></p>
</li>
</ol>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="docker简介和安装"><a href="#docker简介和安装" class="headerlink" title="docker简介和安装"></a>docker简介和安装</h2><p>参考：<br><a href="https://blog.csdn.net/weixin_41282397/article/details/82879246">Dockerfile 与 docker-compose介绍</a><br><a href="https://blog.csdn.net/weixin_35282085/article/details/116812485">docker名词解释</a><br><a href="https://blog.csdn.net/weixin_30596023/article/details/101244965">史上最全Docker环境安装指南</a><br><a href="http://get.daocloud.io/#install-docker">通过 daocloud 在 Linux上 安装 Docker </a><br><a href="https://www.kali.org/docs/containers/installing-docker-on-kali/">kali官网docker文档</a><br><a href="https://docker_practice.gitee.io/">Docker — 从入门到实践</a><br><a href="https://www.cnblogs.com/bingogo/p/11964802.html">kali安装docker、配置阿里云镜像加速、docker使用</a><br><a href="https://blog.csdn.net/liu_runsheng/article/details/104740099">KALI linux 2020.1a安装docker过程记录</a><br><a href="https://www.cnblogs.com/lijingrong/p/13396884.html">使用清华镜像</a><br><a href="https://cloud.tencent.com/developer/article/1589933">使用清华镜像2</a><br><a href="https://blog.csdn.net/pushiqiang/article/details/78682323#t0">docker-compose安装，使用, 快速入门</a><br><a href="https://github.com/CTFTraining/CTFTraining">ctf 靶场安装</a><br><a href="https://www.cnblogs.com/daner1257/p/10197801.html">docker配置仓库时出错</a><br><a href="https://www.ruanyifeng.com/blog/2019/09/curl-reference.html">curl使用</a></p>
<h3 id="名词解释："><a href="#名词解释：" class="headerlink" title="名词解释："></a>名词解释：</h3><ol>
<li>image：镜像，是指将应用打包之后的存储方式，一个image包含多层layer，每一步的结果产出变成文件</li>
<li>container：容器，指image在运行时，包含了文件资源(image展开)和系统资源(系统中的process)</li>
<li>Dockerfile：一种构造image的文件的DSL</li>
<li>docker CE ( Community Edition)是社区版。</li>
<li>Docker Compose用来定义和运行复杂应用的Docker工具，不再需要使用shell脚本来启动容器，因为 一个使用Docker容器的应用，通常由多个容器组成。</li>
</ol>
<h3 id="安装docker步骤："><a href="#安装docker步骤：" class="headerlink" title="安装docker步骤："></a>安装docker步骤：</h3><ul>
<li>注：</li>
</ul>
<ol>
<li>若已经安装docker，需先卸载它们</li>
<li>博客此部分尚未解决一些问题，建议先看别人的。</li>
</ol>
<ul>
<li><strong>方法一</strong>：官网快捷安装<br>终端输入：<br>curl -s <a href="https://get.docker.com/">https://get.docker.com/</a> | sh<br>似乎需要科学上网，我这里输入半天无反应。</li>
<li><strong>方法二</strong>：通过daocloud安装，失败<br>终端输入<br>curl -sSL <a href="https://get.daocloud.io/docker">https://get.daocloud.io/docker</a> | sh<br>第一次安装失败，返回：<blockquote>
<p>E: The repository ‘<a href="https://download.docker.com/linux/debian">https://download.docker.com/linux/debian</a> kali-rolling Release’ does not have a Release file.</p>
</blockquote>
</li>
</ul>
<p>查看自己换的源，输入apt-get update，发现其中报了：</p>
<blockquote>
<p>E: The repository ‘<a href="https://download.docker.com/linux/debian">https://download.docker.com/linux/debian</a> kali-rolling Release’ does not have a Release file.<br>N: Updating from such a repository can’t be done securely, and is therefore disabled by default.<br>N: See apt-secure(8) manpage for repository creation and user configuration details. </p>
</blockquote>
<p>似乎是要添加验证公钥才能使用这个仓库，问题仍未解决，待高人指点。</p>
<ul>
<li>方法三，参考<a href="https://www.kali.org/docs/containers/installing-docker-on-kali/">kali官网文档</a><ul>
<li>终端输入：<br>sudo apt update<br>sudo apt install -y docker.io<br>sudo systemctl enable docker –now<br>测试：<br>输入docker，此时返回帮助信息</li>
<li>安装docker-ce，<ul>
<li>输入：<br>printf “%s\n” “deb [arch=amd64 signed-by=/usr/share/keyrings/docker-ce-archive-keyring.gpg] <a href="https://download.docker.com/linux/debian">https://download.docker.com/linux/debian</a> buster stable” <br>| sudo tee /etc/apt/sources.list.d/docker-ce.list</li>
<li>导入 gpg key:<br>curl -fsSL <a href="https://download.docker.com/linux/debian/gpg">https://download.docker.com/linux/debian/gpg</a> <br>| gpg –dearmor <br>| sudo tee /usr/share/keyrings/docker-ce-archive-keyring.gpg<br>返回一堆乱码</li>
<li>安装docker-ce命令:<br>sudo apt update<br>sudo apt install -y docker-ce docker-ce-cli containerd.io</li>
</ul>
</li>
</ul>
</li>
<li>验证是否成功可输入：<br>sudo docker run hello-world</li>
</ul>
<h3 id="安装docker-compose："><a href="#安装docker-compose：" class="headerlink" title="安装docker-compose："></a>安装docker-compose：</h3><ul>
<li><p><strong>方法一</strong>：<br>sudo pip install docker-compose<br>听说用pip安装docker-compose的话可能会遇到奇怪的问题。<br>记得加上sudo，否则不会添加路径到环境变量中。</p>
</li>
<li><p><strong>方法二</strong>：<br>参考<a href="https://blog.csdn.net/pushiqiang/article/details/78682323">https://blog.csdn.net/pushiqiang/article/details/78682323</a><br>通过修改URL中的版本，可以自定义需要的版本。</p>
<ul>
<li>github获取则输入：<br>sudo curl -L <a href="https://github.com/docker/compose/releases/download/1.16.1/docker-compose-%60uname">https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`uname</a> -s<code>-</code>uname -m` -o /usr/local/bin/docker-compose</li>
<li>通过daocloud获取可输入：<br>curl -L <a href="https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-%60uname">https://get.daocloud.io/docker/compose/releases/download/1.29.2/docker-compose-`uname</a> -s<code>-</code>uname -m` &gt; /usr/local/bin/docker-compose</li>
<li>添加可执行权限：<br>chmod +x /usr/local/bin/docker-compose</li>
</ul>
</li>
<li><p>验证：<br>输入：<br>docker-compose –version<br>返回：</p>
<blockquote>
<p>docker-compose version 1.29.2, build unknown</p>
</blockquote>
</li>
</ul>
<p>docker使用方法可参考：<br><a href="https://vuepress.mirror.docker-practice.com/introduction/">Docker — 从入门到实践</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="全球互联网"><a href="#全球互联网" class="headerlink" title="全球互联网"></a>全球互联网</h2><p>GitHub上的软件或一些浏览器插件，由于审核机制无法详细说明，可参考其他教程。</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="蚁剑安装和使用"><a href="#蚁剑安装和使用" class="headerlink" title="蚁剑安装和使用"></a>蚁剑安装和使用</h2><p>参考：<br><a href="https://doc.u0u.us/zh-hans/getting_started/get_antsword.html">https://doc.u0u.us/zh-hans/getting_started/get_antsword.html</a><br><a href="https://www.yuque.com/antswordproject/antsword/srruro">https://www.yuque.com/antswordproject/antsword/srruro</a></p>
<p>下载Linux 64位版本加载器：<a href="https://github.com/AntSwordProject/AntSword-Loader">https://github.com/AntSwordProject/AntSword-Loader</a></p>
<p>解压，进入文件夹输入./AntSword运行，选择一个空目录下载存放蚁剑源代码，介绍和使用方法请看参考链接</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="dirsearch-目录爆破工具安装"><a href="#dirsearch-目录爆破工具安装" class="headerlink" title="dirsearch 目录爆破工具安装"></a>dirsearch 目录爆破工具安装</h2><p>参考：<br><a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></p>
<p><strong>方法一</strong>：<br>终端输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install dirsearch</span><br></pre></td></tr></table></figure>
<p>使用方法：</p>
<blockquote>
<p>dirsearch -u &lt;URL&gt; -e &lt;EXTENSIONS&gt;</p>
</blockquote>
<p>举例如：</p>
<blockquote>
<p>dirsearch -u <a href="https://www.baidu.com/">https://www.baidu.com/</a> -e js,php</p>
</blockquote>
<p><strong>方法二</strong>：<br>终端输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/maurosoria/dirsearch.git</span><br><span class="line">cd dirsearch</span><br><span class="line">pip3 install -r requirements.txt</span><br><span class="line">python3 dirsearch.py -u &lt;URL&gt; -e &lt;EXTENSIONS&gt;</span><br></pre></td></tr></table></figure>

<h2 id="burpsuit换成专业版"><a href="#burpsuit换成专业版" class="headerlink" title="burpsuit换成专业版"></a>burpsuit换成专业版</h2><p>参考：<br><a href="https://www.cnblogs.com/yeblade/p/14266385.html">kali安装专业版burpsuite - 2021年</a><br><a href="https://blog.csdn.net/Richard_qi/article/details/104663060">kali安装BurpSuite pro版(小白笔记) - 2020年</a><br><a href="https://blog.csdn.net/HACKETTx/article/details/103786249">Kali 安装Burpsuite Pro - 2019年</a><br>自带的burpsuit是社区版，换成专业版更强大。<br>笔者尚未尝试此操作，可以参考上面的链接教程。<br>其中第一个链接教程中注册机的下载地址是：<a href="https://www.lanzoui.com/iJmSJkavl2j">https://www.lanzoui.com/iJmSJkavl2j</a>，似乎打错了。</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="安装tor"><a href="#安装tor" class="headerlink" title="安装tor"></a>安装tor</h2><p>参考：<br><a href="https://blog.csdn.net/culingluan4376/article/details/108707008">在Linux上安装和使用Tor浏览器</a><br><a href="https://www.bbskali.cn/thread-1585-1-1.html">kali linux搭建tor</a></p>
<p>tor可以伪装ip，用于爆破时避免被封IP等，不过速度很慢。</p>
<ul>
<li>终端输入命令下载安装，但是需要翻墙，而且据说ubuntu社区未维护好更新。<br><del>终端输入：<br>sudo apt intall tor</del></li>
<li>浏览器获取安装包下载<br>进入链接获取，打开下载即可：<br><a href="https://github.com/TheTorProject/gettorbrowser">Tor - GitHub</a><br><a href="https://sourceforge.net/projects/t-browser/files/">Tor - sourceforge</a><br>如果链接不好用，就搜索引擎搜一下。</li>
</ul>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>待补充：远程ssh登录kali虚拟机，上电或定时开机自启kali虚拟机的方法等</p>
]]></content>
      <categories>
        <category>security</category>
        <category>kali linux</category>
      </categories>
      <tags>
        <tag>kali linux</tag>
        <tag>security</tag>
      </tags>
  </entry>
  <entry>
    <title>信息安全学习总结</title>
    <url>/2021/09/07/2021-09-07/</url>
    <content><![CDATA[<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<p>待补充：密码学，攻击的防御方法，常见安全工具使用和实现原理，常见网络协议细节，简单编程</p>
<h1 id="信息安全-学习"><a href="#信息安全-学习" class="headerlink" title="信息安全 学习"></a>信息安全 学习</h1><p>建议安装 KALI 并学习，建议做 CTF 题目，建议了解基础计算机相关知识，建议去漏洞平台、公益 src 提交漏洞。<br>二进制方向建议看 <a href="https://firmianay.gitbooks.io/ctf-all-in-one/content/">CTF-All-In-One 《CTF 竞赛入门指南》</a>，它和本文的最终目标形态相近。</p>
<p>帮助：<br><a href="https://firmianay.gitbooks.io/ctf-all-in-one/content/">CTF-All-In-One 《CTF 竞赛入门指南》</a><br><a href="https://websec.readthedocs.io/zh/latest/index.html">Web安全学习笔记</a><br><a href="https://wiki.wgpsec.org/knowledge">狼组安全团队公开知识库</a><br><a href="https://www.bilibili.com/read/cv12315967">愿安全人不在踩坑，网络安全的学习经验</a><br><a href="https://www.sec-wiki.com/skill">安全技能 -SecWiki</a><br><a href="https://github.com/phith0n/Mind-Map">phith0n Mind-Map思维导图</a><br><a href="https://github.com/riusksk/secbook">信息安全从业者书单推荐</a><br><a href="https://www.cnblogs.com/bmjoker">bmjoker的博客</a></p>
<span id="more"></span>

<p>论坛：<br><a href="https://www.freebuf.com/">FreeBuf网络安全行业门户</a><br><a href="https://bbs.ichunqiu.com/forum-59-1.html">i 春秋 —— 白帽子技术/思路</a><br><a href="https://www.exploit-db.com/">EXPLOIT DATABASE</a></p>
<p>CTF 平台：<br><a href="https://www.cnblogs.com/zhaijiahui/p/13072893.html">在线CTF平台</a><br><a href="https://www.ctfhub.com/#/calendar">近期赛程</a></p>
<p>漏洞平台：<br><a href="https://www.vulbox.com/projects/list">漏洞盒子 —— 公益 src</a><br><a href="https://src.sjtu.edu.cn/">教育行业漏洞报告平台 —— 上交大</a><br><a href="https://www.hackerone.com/">hackerone</a></p>
<p>坑：</p>
<ol>
<li>打ctf 时有时flag不会显示到网页上，但在 html,  Javascript 源代码等地方，所以有时觉得操作没错但是没反应，可以全局搜索是否有flag。全局搜索办法：打开浏览器开发人员工具 devtools，选中“源代码”项，右键“页面”项中的文件夹，就可以全局搜索。</li>
<li>在burpsuite的repeater里GET请求和POST请求互换时，右键选择change request method来更换，自己修改会可能会忘记编辑名为Content-Type的请求头导致无正确响应。参考：<a href="https://www.cnblogs.com/fengff/p/10843728.html">POST 提交数据的几种方式</a></li>
<li> URL 如果带加号“+”，由于浏览器会将 “+” 等同于空格进行处理，有时会导致意料外的结果。如：<a href="http://ipaddress/redirect.php?url=1+2%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%E7%BB%93%E6%9E%9C%E5%8F%98%E6%88%90%E4%BA%861">http://ipaddress/redirect.php?url=1+2，这里的结果变成了1</a> 2或为空，所以测试时基本都使用减号而不使用加号，如 ?url=5-3，得到结果 2，说明这里可以注入执行命令。如果一定要用加号，可以使用编码 %2B</li>
</ol>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="Kali-Linux-环境准备"><a href="#Kali-Linux-环境准备" class="headerlink" title="Kali Linux 环境准备"></a>Kali Linux 环境准备</h2><p>建议使用虚拟机安装 kali，具体参考帮助里的链接。</p>
<p>帮助：<br><a href="https://www.kali.org/get-kali/">获取kali linux</a><br><a href="https://blog.csdn.net/kaihang_cai/article/details/119791713">安装kali linux后的准备工作</a><br><a href="https://zing.gitbooks.io/kali-lunix/content/">Kali Linux 工具使用中文说明书</a></p>
<h2 id="Windows-环境准备"><a href="#Windows-环境准备" class="headerlink" title="Windows 环境准备"></a>Windows 环境准备</h2><p>安装 Python 等语言环境, 称心的 IDE, Burpsuite Pro, Wireshark 等<br>一些工具安装见文章后半部。</p>
<h2 id="Android-环境准备"><a href="#Android-环境准备" class="headerlink" title="Android 环境准备"></a>Android 环境准备</h2><p>如果资源充足，也可以尝试将手机打造成安全工具。<br>无需 root 的步骤：</p>
<ol>
<li>浏览器搜索并安装 <a href="https://f-droid.org/">F-Droid</a> 开源软件市场。</li>
<li>在 F-Droid 中搜索 Termux 并安装最新版。Termux 是运行在 Android 上的 命令行终端，不需要root。</li>
<li>参考 <a href="https://www.sqlsec.com/2018/05/termux.html">Termux 高级终端安装使用配置教程</a> 等进行 Termux 的配置，自选一些安全工具安装，如 安装 Kali NetHunter 等。</li>
<li>F-Droid 软件市场中有一个 RSS 订阅软件 Feeder，可以添加一些安全相关的 RSS 订阅源，跟踪最新的安全咨询。</li>
</ol>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><h2 id="常见的重要配置文件默认位置"><a href="#常见的重要配置文件默认位置" class="headerlink" title="常见的重要配置文件默认位置"></a>常见的重要配置文件默认位置</h2><p>待补充中······<br>参考：<a href="https://www.cnblogs.com/zhaijiahui/p/8459661.html">整理了一些下载利用文件</a></p>
<p>Linux：</p>
<ol>
<li>/etc/passwd                                 保存了系统中所有的用户信息</li>
<li>/etc/shadow                                用户的密码信息</li>
<li>/root/.ssh/authorized_keys         公钥文件</li>
<li>/root/.bash_history                      用户终端操作历史记录</li>
<li>/root/.ssh/authorized_keys<br>/root/.ssh/id_rsa<br>/root/.ssh/id_ras.keystore<br>/root/.ssh/known_hosts //记录每个访问计算机用户的公钥</li>
<li>/etc/my.cnf //mysql配置文件</li>
<li>/etc/httpd/conf/httpd.conf //apache配置文件</li>
<li>/root/.bash_history //用户历史命令记录文件</li>
<li>/root/.mysql_history //mysql历史命令记录文件</li>
<li>/proc/mounts //记录系统挂载设备</li>
<li>/porc/config.gz //内核配置文件</li>
<li>/var/lib/mlocate/mlocate.db //全文件路径</li>
<li>/porc/self/cmdline //当前进程的cmdline参数</li>
</ol>
<p>参考：<br><a href="https://blog.csdn.net/qq_17204441/article/details/89062592">Linux重要配置文件</a><br><a href="https://blog.csdn.net/qq_44159028/article/details/116723804">系统重要配置文件路径</a></p>
<p>Windows：</p>
<ol>
<li>/windows/win.ini 或 C:\Windows\win.ini //Windows系统的一个基本系统配置文件</li>
<li>C:\boot.ini //查看系统版本</li>
<li>C:\Windows\System32\inetsrv\MetaBase.xml //IIS配置文件</li>
<li>C:\Windows\repair\sam //存储系统初次安装的密码</li>
<li>C:\Program Files\mysql\my.ini //Mysql配置</li>
<li>C:\Program Files\mysql\data\mysql\user.MYD //Mysql root</li>
<li>C:\Windows\php.ini //php配置信息</li>
<li>C:\Windows\my.ini //Mysql配置信息</li>
</ol>
<p>PHP：</p>
<ol>
<li>/usr/local/php/etc/php.ini</li>
</ol>
<p> Apache：</p>
<ol>
<li>主配置文件：/etc/httpd/conf/httpd.conf</li>
<li>默认站点主目录：/var/www/html/<br>参考：<a href="https://www.cnblogs.com/qianyuliang/p/6831942.html">Apache的主要目录和配置文件详解</a></li>
</ol>
<p>MySQL：</p>
<ol>
<li>/etc/my.cnf 或 /etc/mysql/my.cnf   于 Linux环境下</li>
<li>my.ini   于Windows环境下</li>
</ol>
<h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><p>帮助：<br><a href="https://blog.csdn.net/weixin_34015566/article/details/89693937">常用和不常用端口一览表收藏</a><br><a href="https://blog.csdn.net/qq_34646546/article/details/88545165">端口号大全</a><br><a href="https://www.cnblogs.com/bmjoker/p/8833316.html">黑客常用端口利用总结</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="web方向"><a href="#web方向" class="headerlink" title="web方向"></a>web方向</h1><p>要学习的内容：</p>
<ul>
<li>熟练语法特性和相关知识点：<br>HTML, JavaScript, CSS, Linux, HTTP, Python,<br>PHP, MySQL, JSON</li>
<li>至少粗略了解，知道长什么样，用到再学亦可：<br>Docker, Apache, Node.js,<br>FastAPI, Flask, Django,<br>React, Vue.js,<br>Webpack, XML</li>
</ul>
<p>目录：</p>
<ol>
<li>file upload</li>
<li>local file include</li>
<li>xss跨站脚本攻击</li>
<li>sql注入</li>
<li>源码泄露</li>
<li>爆破</li>
<li>XML External Entity injection</li>
<li>综合练习</li>
</ol>
<h2 id="文件上传漏洞（file-upload）"><a href="#文件上传漏洞（file-upload）" class="headerlink" title="文件上传漏洞（file upload）"></a>文件上传漏洞（file upload）</h2><p>题目：</p>
<ol>
<li><a href="https://buuoj.cn/challenges#Upload-Labs-Linux">BUU Upload-Labs-Linux 系列共20关</a><br>解答：<br><a href="https://xz.aliyun.com/t/4029">Upload-labs 通关笔记 - 20关</a><br><a href="https://blog.csdn.net/weixin_44677409/article/details/92799366">upload-labs通关记录 - 19关</a><br><a href="https://blog.csdn.net/mochu7777777/article/details/108687672">upload-labs闯关笔记 - 18关</a><br><a href="https://blog.csdn.net/weixin_45588247/article/details/119652017">upload-labs Pass-12：文件名检测00截断绕过</a><br><a href="https://xz.aliyun.com/t/2657">upload-labs Pass 16：绕过图片二次渲染</a><br>注：第6、8题需要服务器是window环境，似乎是因为服务器换了linux。第11、12题需要php版本小于5.3.4，这里服务器php版本是7.2.21。</li>
<li>待补充</li>
</ol>
<p>首先，上传的文件能够被Web容器解释执行。所以文件上传后所在的目录要是Web容器所覆盖到的路径。<br>其次，用户能够从Web上访问这个文件。如果文件上传了，但用户无法通过Web访问，或者无法得到Web容器解释这个脚本，那么也不能称之为漏洞。<br>最后，用户上传的文件若被安全检查、格式化、图片压缩等功能改变了内容，则也可能导致攻击不成功。<br>所以导出下列防御措施：</p>
<p>防御：</p>
<ol>
<li>文件上传的目录设置为不可执行</li>
<li>使用白名单判断文件类型，应综合使用MIME Type、后缀校验等方式，对于图片等类型可以使用压缩函数等破坏文件中的代码。</li>
<li>随机数重命名文件名和文件路径。</li>
<li>单独设置文件服务器域名，由于浏览器同源策略，客户端攻击将缓解不少，如上传包含 Javascript 的XSS利用，但这需要看具体业务情况。</li>
</ol>
<p>阿里云盘上传的文件无法修改后缀名，不知是否是出于防御文件上传漏洞的因素（如上传后重命名为 *.mp4、等 ）。但是以前可以抓包修改后缀名，所以以前可能有漏洞。</p>
<p>帮助：<br><a href="https://www.cnblogs.com/vipygd/p/11279537.html">HTTP文件上传原理</a><br><a href="https://blog.csdn.net/chuangqudiao9845/article/details/101045517">一句话木马 - 介绍不好，待换</a><br><a href="https://www.cnblogs.com/WhiteHatKevil/p/10150480.html">php一句话木马 - 待换</a><br><a href="https://www.cnblogs.com/wang1204/p/5644827.html">php文件上传后缀与文件类型对照表</a><br><a href="https://www.php.cn/php-ask-453939.html">php文件隐藏，让别的后缀也能执行php文件</a><br><a href="https://blog.csdn.net/weixin_30340269/article/details/113668828">几种文件上传漏洞介绍</a></p>
<h2 id="本地文件包含漏洞-Local-File-Include"><a href="#本地文件包含漏洞-Local-File-Include" class="headerlink" title="本地文件包含漏洞(Local File Include)"></a>本地文件包含漏洞(Local File Include)</h2><ol>
<li>题目：<a href="https://buuoj.cn/challenges#LFI%20Labs">LFI Labs</a><br>解答：<a href=""></a></li>
<li>题目：<a href="https://buuoj.cn/challenges#[HCTF%202018]WarmUp">[HCTF 2018]WarmUp</a><br>解答：<a href=""></a></li>
</ol>
<h2 id="XSS跨站脚本攻击-Cross-Site-Scripting"><a href="#XSS跨站脚本攻击-Cross-Site-Scripting" class="headerlink" title="XSS跨站脚本攻击(Cross Site Scripting)"></a>XSS跨站脚本攻击(Cross Site Scripting)</h2><p>题目：</p>
<ol>
<li><a href="https://buuoj.cn/challenges#XSS-Lab">BUU XSS-Lab</a><br>解答：<br><a href="https://blog.csdn.net/wo41ge/article/details/107459332">xss-labs通关大合集</a><br><a href="https://cloud.tencent.com/developer/article/1746740">xss-labs 通关学习笔记</a><br><a href="https://www.cnblogs.com/xiaomeng2333/p/11595786.html">xss靶场之xss-labs</a><br><a href="https://blog.csdn.net/qq_32393893/article/details/104814749">第14关 exif xss 复现</a><br><a href="https://cloud.tencent.com/developer/article/1677621">xss-labs第1~13关</a></li>
<li><a href="https://buuoj.cn/challenges#BUU%20XSS%20COURSE%201">BUU XSS COURSE 1</a><br>解答：似乎有问题，没有admin用户的访问情况<br><a href="https://liuyucishi.wang/xssxue-xi-zhi-store-er/">BUU_XSS_Course</a><br><a href="https://www.manongdao.com/article-2258090.html">BUU XSS COURSE 1</a></li>
</ol>
<p>防御：</p>
<ol>
<li>关键cookie加上HttpOnly(浏览器将禁止Javascript访问带有HttpOnly属性的Cookie)，基本解决Cookie劫持，缓解XSS攻击。</li>
<li>输出时检查，变量输出到页面时，使用编码或转义，如Html代码使用HtmlEncode转为HTMLEntities（如 &lt; 转为 &amp;lt;），Javascript使用JavascriptEncode并将输出的变量放在引号内部（如var x = “1; alert(1)”;）。</li>
<li>输入时检查，XSS Filter，也用于格式检查，过滤或编码特殊字符，但可能改变用户的语义。</li>
<li></li>
</ol>
<p>帮助：<br><a href="https://www.qqxiuzi.cn/wz/zixun/1681.htm">ISO/IEC 8859-1 实体名称及其编号</a><br><a href="https://www.cnblogs.com/xcsn/p/3559624.html">HTML转义字符大全</a><br><a href="https://www.sqlsec.com/2020/01/xss.html">XSS 从零开始</a><br><a href="https://blog.csdn.net/wswokao/article/details/80884582">XSS绕过WAF姿势总结</a><br><a href="https://www.cnblogs.com/wjrblogs/p/12341190.html">XSS之绕过简单WAF总结 </a></p>
<p>课外阅读：<br><a href="https://www.freebuf.com/vuls/271165.html">国内知名安全平台某BUF的xss漏洞 —— dom 型 js 前端漏洞</a><br><a href="https://cloud.tencent.com/developer/article/1380381">利用BeEF执行xss攻击 —— 注意是运行 /usr/share/beef-xss/beef</a><br><a href="https://github.com/s0md3v/XSStrike">XSS 漏洞扫描工具 XSStrike</a></p>
<h2 id="CSRF跨站请求伪造-Cross-Site-Request-Forgery"><a href="#CSRF跨站请求伪造-Cross-Site-Request-Forgery" class="headerlink" title="CSRF跨站请求伪造(Cross Site Request Forgery)"></a>CSRF跨站请求伪造(Cross Site Request Forgery)</h2><p>题目：</p>
<ol>
<li></li>
</ol>
<p>防御：</p>
<ol>
<li>重要操作要求验证码（辅助防御手段）</li>
<li>验证 HTTP Referer 字段（不一定能获取，所以只能作为监控手段）；或者使用 Origin 头来让服务端判断请求是否来自合法的源（不那么容易伪造或清空，可防范CSRF）</li>
<li>在请求表单（或AJAX，如果用GET放在URL中可能被Referer头泄露）中添加 csrf token ( 注意，不是 JWT token )，服务器验证 token 正确性；客户端的 token 应该被保存到 local storage 或 session storage (一般是 session，关闭页面即失效)。</li>
</ol>
<p>帮助：<br><a href="https://www.cnblogs.com/sablier/p/11099909.html">关于 CSRF 和 csrftoken</a><br><a href="https://zhuanlan.zhihu.com/p/114750961">什么是 CSRF 攻击？如何防御 CRSF 攻击？</a><br><a href="https://blog.csdn.net/besmarterbestronger/article/details/102544093">CSRF、Cookie、Session和token之间不得不说得那些事儿</a></p>
<h2 id="SSRF服务器端请求伪造-Server-Side-Request-Forgery"><a href="#SSRF服务器端请求伪造-Server-Side-Request-Forgery" class="headerlink" title="SSRF服务器端请求伪造(Server-Side Request Forgery)"></a>SSRF服务器端请求伪造(Server-Side Request Forgery)</h2><p>攻击者伪造服务端的请求发起攻击，或者借由服务端为跳板来攻击目标系统，通常针对外部网络无法直接访问的内部系统。</p>
<p>协议利用：<br><a href="https://www.cnblogs.com/Konmu/p/12984891.html">gopher 协议初探</a><br><a href="https://www.cnblogs.com/zzjdbk/p/12970919.html">SSRF漏洞用到的其他协议（dict，file协议）</a><br><a href="https://www.cnblogs.com/Node-Sans-Blog/p/15118018.html">Dict 协议是什么</a></p>
<p>防御：</p>
<ol>
<li>过滤返回信息。验证远程服务器对请求的响应是比较容易的方法，如果web应用是去获取某一种类型的文件，那么在把返回结果展示给用户之前先验证返回的信息是否符合标准。</li>
<li>禁用不需要的协议。仅仅允许http和https请求。可以防止类似于file:///, gopher://, ftp:// 等引起的问题</li>
<li>统一错误信息。避免用户可以根据错误信息来判断远端服务器的端口状态。</li>
<li>限制请求的端口。只允许 http 常用的端口，比如 80、443、8080 等。</li>
<li>设置 URL 白名单或者限制内网IP</li>
<li>对 DNS Rebinding，可以使用 DNS 缓存或者 Host 白名单</li>
<li>禁止跳转</li>
</ol>
<p>帮助（以下链接都有必要看）：<br><a href="https://cloud.tencent.com/developer/article/1561355">浅谈SSRF原理及其利用</a><br><a href="https://websec.readthedocs.io/zh/latest/vuln/ssrf.html">SSRF — Web安全学习笔记 1.0 文档 —— 给出了可能的利用点列表</a><br><a href="https://xz.aliyun.com/t/2115">了解SSRF,这一篇就足够了</a><br><a href="https://cloud.tencent.com/developer/article/1803709">Web Security 之 SSRF —— Blind SSRF 和 隐藏攻击面 Referer 头</a><br><a href="https://cloud.tencent.com/developer/article/1669004">SSRF绕过</a><br><a href="https://cloud.tencent.com/developer/article/1780081">SSRF安全指北 —— 介绍了新型攻击手法，利用 tls 进行 ssrf</a></p>
<h2 id="SSTI-服务器端模板注入-Server-Side-Template-Injection"><a href="#SSTI-服务器端模板注入-Server-Side-Template-Injection" class="headerlink" title="SSTI 服务器端模板注入(Server-Side Template Injection)"></a>SSTI 服务器端模板注入(Server-Side Template Injection)</h2><p>帮助：<a href="https://www.cnblogs.com/bmjoker/p/13508538.html">SSTI（模板注入）漏洞</a></p>
<h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>题目：</p>
<ol>
<li><a href="https://adworld.xctf.org.cn/task/task_list?type=web&number=3&grade=1">攻防世界NewsCenter</a><br>解答：学习sqlmap用法</li>
<li><a href="https://adworld.xctf.org.cn/task/task_list?type=web&number=3&grade=1&page=1">攻防世界supersqli</a> 或 <a href="https://buuoj.cn/challenges#[%E5%BC%BA%E7%BD%91%E6%9D%AF%202019]%E9%9A%8F%E4%BE%BF%E6%B3%A8">[强网杯 2019]随便注</a><br>解答：学习堆叠注入等，此题如果用sqlmap只能爆出库名supersqli<br><a href="https://blog.csdn.net/shuaicenglou3032/article/details/110450747">随便注write up</a><br><a href="https://blog.csdn.net/freerats/article/details/107735132">随便注&amp;[GYCTF2020]Blacklist -wp</a></li>
<li><a href="https://adworld.xctf.org.cn/task/task_list?type=web&number=3&grade=1">攻防世界comment</a><br>解答：学习换行注释，注：题目下载的内容可能是不完整的，看下面链接。<br><a href="https://blog.csdn.net/weixin_43093631/article/details/106650625">攻防世界高手进阶之Web comment</a></li>
<li><a href="https://buuoj.cn/challenges#sqli-labs">BUU sqli-labs</a></li>
</ol>
<p>防御：</p>
<ol>
<li>使用预编译语句</li>
<li>使用安全的储存过程 </li>
<li>如果无法避免动态SQL语句，应使用严格的输入过滤，如检查输入数据的数据格式和类型，或者使用安全的编码函数处理输入</li>
<li>数据库应该遵循最小权限原则，也应该为每个应用分配不同的账户。</li>
</ol>
<p>帮助：<br><a href="https://blog.nowcoder.net/n/9d9987c816214f62b9266276da65e11f">深入理解SQL注入与预编译（上）</a><br><a href="https://blog.nowcoder.net/n/be73b8f592504ae8b1d00368433061be">深入理解SQL注入与预编译（下）</a><br><a href="https://www.cnblogs.com/iAmSoScArEd/articles/9263735.html">sqlmap常用操作命令</a><br><a href="https://blog.csdn.net/smli_ng/article/details/106026901">sqlmap使用</a></p>
<h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><p>反序列化漏洞是基于序列化和反序列化的操作，在反序列化——unserialize()时存在用户可控参数，而反序列化会自动调用一些魔术方法，如果魔术方法内存在一些敏感操作例如eval()函数，而且参数是通过反序列化传入的，那么用户就可以通过改变参数来执行敏感操作，这就是反序列化漏洞。</p>
<p>帮助：<br><a href="https://www.freebuf.com/articles/web/263584.html">反序列化漏洞详解 —— 以 PHP 为例</a><br><a href="https://www.freebuf.com/articles/web/241998.html">一篇文章带你了解反序列化漏洞</a></p>
<h2 id="未授权访问漏洞"><a href="#未授权访问漏洞" class="headerlink" title="未授权访问漏洞"></a>未授权访问漏洞</h2><p>帮助：<br><a href="https://www.pa55w0rd.online/unauthorized-access-sumup/">常见未授权访问漏洞总结</a><br><a href="https://www.freebuf.com/articles/web/278245.html">超全面未授权访问漏洞复现合集</a></p>
<h2 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h2><p>帮助：<br><a href="https://lddp.github.io/2018/05/10/WEB-%E6%BA%90%E7%A0%81%E6%B3%84%E6%BC%8F/">WEB安全-常见源码泄露</a></p>
<h3 id="git源码泄露"><a href="#git源码泄露" class="headerlink" title="git源码泄露"></a>git源码泄露</h3><p>题目：</p>
<ol>
<li><a href="https://adworld.xctf.org.cn/task/task_list?type=web&number=3&grade=1&page=1">攻防世界mfw</a><br>解答：<a href="https://www.jianshu.com/p/795f918d791b">攻防世界-Web-mfw</a></li>
</ol>
<p>帮助：<br><a href="https://blog.csdn.net/xy_sunny/article/details/107620695">git信息泄露漏洞</a><br><a href="https://www.freebuf.com/articles/web/267597.html">.git信息泄露漏洞-原理</a><br><a href="https://github.com/lijiejie/GitHack">GitHack工具 可还原工程源代码 - github.com</a><br><a href="https://blog.csdn.net/qq_37450949/article/details/117821102">GitHack 和 GitHacker 工具比较</a></p>
<h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><p>题目：</p>
<ol>
<li><a href="https://buuoj.cn/challenges#BUU%20BRUTE%201">BUU BRUTE 1</a><br>解答：</li>
</ol>
<p>帮助：<br><a href="https://github.com/rootphantomer/Blasting_dictionary">Blasting_dictionary —— 爆破字典（较旧）</a><br><a href="https://github.com/TheKingOfDuck/fuzzDicts">fuzzDicts —— 网络渗透 fuzz 用字典</a><br><a href="https://blog.csdn.net/weixin_43039349/article/details/89323846">web登录爆破（hydra的简单使用）</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="渗透"><a href="#渗透" class="headerlink" title="渗透"></a>渗透</h2><p>参考：<a href="https://www.sqlsec.com/2020/10/xss2.html">入侵某 QQ 钓鱼网站</a></p>
<p>帮助：<br><a href="https://www.jianshu.com/p/2f7fdb338431">有手就行：零基础渗透网站步骤</a><br><a href="https://wiki.bylibrary.cn/">白阁文库工具  —— 速查表、知识库、漏洞库</a></p>
<h3 id="寻找目标"><a href="#寻找目标" class="headerlink" title="寻找目标"></a>寻找目标</h3><p><a href="https://www.freebuf.com/articles/web/265782.html">来自榜一的公益SRC挖掘思路分享</a></p>
<h3 id="信息获取"><a href="#信息获取" class="headerlink" title="信息获取"></a>信息获取</h3><p>对于一个网站、软件、服务器等如何收集相关信息</p>
<p>旁站和C段的介绍，参考：<a href="https://blog.csdn.net/JieDG/article/details/106106680">信息收集之——旁站、C段</a></p>
<p>获取子域名，工具包括：<br><a href="https://github.com/shmilylty/OneForAll">OneForAll</a>、layer、fofa、<a href="https://github.com/knownsec/ksubdomain">Ksubdomain</a>、<a href="https://github.com/chaitin/xray">Xray</a> 等</p>
<p><a href="https://www.freebuf.com/articles/web/266921.html">2021年攻防演练信息收集实战技巧</a></p>
<h3 id="数据库提权"><a href="#数据库提权" class="headerlink" title="数据库提权"></a>数据库提权</h3><p>UDF 提权</p>
<p>MOF 提权</p>
<p>帮助：<br><a href="https://bbs.huaweicloud.com/blogs/326285">MySQl提权 mof、udf过程详解</a><br><a href="https://blog.csdn.net/l1028386804/article/details/85768994">渗透之数据库提权</a></p>
<h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><p>帮助：<br><a href="https://www.secpulse.com/archives/132643.html">内网渗透之内网穿透</a><br><a href="https://search.freebuf.com/search/?search=%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F#article">内网渗透搜索结果</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="XXE-XML外部实体注入漏洞-XML-External-Entity-injection"><a href="#XXE-XML外部实体注入漏洞-XML-External-Entity-injection" class="headerlink" title="XXE XML外部实体注入漏洞(XML External Entity injection)"></a>XXE XML外部实体注入漏洞(XML External Entity injection)</h3><p>DTD(文档类型定义) 定义了 XML 文档的格式，如元素类别和出现次数，实体声明等，以便 XML Parser 解析 XML 文档，并验证 XML 文档是否符合 DTD 的定义。有点类似于一系列声明的集合。</p>
<p>但是 DTD 的外部实体可支持 http、file 等协议，当用户能控制 XML 文档内容时(DTD 属于 XML，相当于控制了 DTD)，可以自行添加外部实体来执行这些协议的操作。</p>
<p>如果是以 JSON 格式提交的数据，有可能服务器还能解析 XML</p>
<p>题目：<a href="https://www.freebuf.com/vuls/263348.html">XXE漏洞原理以及练习</a></p>
<p>帮助：<br><a href="https://www.w3school.com.cn/xml/xml_intro.asp">XML 学习</a><br><a href="https://www.w3school.com.cn/dtd/index.asp">XML 的 DTD(文档类型定义) 介绍</a><br><a href="https://www.freebuf.com/articles/web/280780.html">浅谈XXE漏洞</a><br><a href="https://www.freebuf.com/vuls/317253.html">XXE学习笔记</a><br><a href="https://www.cnblogs.com/20175211lyz/p/11413335.html">CTF XXE</a><br><a href="https://www.freebuf.com/articles/web/177979.html">XXE漏洞利用技巧：从XML到远程代码执行</a></p>
<p>防御：</p>
<ol>
<li>过滤和验证用户提交的XML数据</li>
<li>配置XML parser只能使用静态DTD，不允许XML中含有任何自己声明的DTD</li>
<li>开发语言提供的禁用外部实体的方法</br></li>
</ol>
<ul>
<li>PHP：</br><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">libxml_disable_entity_loader(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure></li>
<li>JAVA: 不同java组件修复方案不一样，请参考OWASP修复建议<a href="https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet#Java">https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet#Java</a><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DocumentBuilderFactory dbf =DocumentBuilderFactory.newInstance();</span><br><span class="line">dbf.setExpandEntityReferences(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure></li>
<li>Python：<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">xmlData = etree.parse(xmlSource,etree.XMLParser(resolve_entities=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure>
<h3 id="CSV注入-CSV-Injection"><a href="#CSV注入-CSV-Injection" class="headerlink" title="CSV注入(CSV Injection)"></a>CSV注入(CSV Injection)</h3>帮助：<a href="https://blog.csdn.net/weixin_41924764/article/details/108665746">CSV注入漏洞原理及利用教程</a></li>
</ul>
<h3 id="CRLF-注入"><a href="#CRLF-注入" class="headerlink" title="CRLF 注入"></a>CRLF 注入</h3><p>帮助：<br><a href="https://www.freebuf.com/articles/web/283959.html">CRLF、CSRF、SSRF攻击与利用</a></p>
<h3 id="JSON-Web-Tokens"><a href="#JSON-Web-Tokens" class="headerlink" title="JSON Web Tokens"></a>JSON Web Tokens</h3><p>题目：<a href="https://hgame.vidar.club/">杭电2022 ctf easy_auth</a><br>解答：直接上 <a href="https://jwt.io/">https://jwt.io</a> 改 token，它是弱密钥（为空）</p>
<p>帮助：<br><a href="https://jwt.io/">JWT.IO</a><br><a href="https://www.jianshu.com/p/576dbf44b2ae">什么是 JWT – JSON WEB TOKEN</a><br><a href="https://bbs.ichunqiu.com/thread-59943-1-1.html">JSON Web Token(JWT)介绍及其在CTF中的四大考点</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h2><p>题目：</p>
<ol>
<li><a href="https://buuoj.cn/challenges#Webug%204.0">BUU - Webug 4.0</a><br>解答：<br><a href="https://blog.csdn.net/weixin_41924764/article/details/107548754">webug4.0通关笔记</a><br><a href="https://www.jianshu.com/p/26d204ecaf69">webug4.0 第一关到第三十关笔记</a><br><a href="https://blog.csdn.net/qq_32434307/article/details/79480036">Nginx中的解析漏洞</a></li>
<li><a href="https://buuoj.cn/challenges#Web-DVWA">BUU - Web-DVWA</a><br>解答：<a href="https://www.wuyini.cn/672.html">DVWA 靶场通关</a><br>帮助：<a href="http://3xp10it.cc/web/2017/08/20/sqlmap%E5%AF%B9%E7%8A%B6%E6%80%81%E7%A0%81404%E5%A4%84%E7%90%86%E7%9A%84bug/">sqlmap对状态码404处理的bug - DVWA盲注</a></li>
<li><a href="https://buuoj.cn/challenges#PikaChu">PikaChu</a><br>解答：<a href="https://blog.csdn.net/BROTHERYY/article/details/106923848">Pikachu 通关笔记</a></li>
</ol>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h1><p>待补充······<br>题目： <a href="https://crackmes.one/">crackmes</a><br>解答：<a href="https://www.cnblogs.com/lonenysky/p/11322353.html">逆向破解之160个CrackMe</a></p>
<p>帮助：<br><a href="https://blog.csdn.net/eastmount/category_10243741.html">安全攻防进阶篇</a><br><a href="https://cloud.tencent.com/developer/article/1882119">CTF逆向指南</a><br>一些人的学习记录：<br><a href="https://bbs.pediy.com/thread-251267.htm">C++写壳之高级篇</a><br><a href="https://blog.csdn.net/qq_38474570">鬼手56 的 CSDN 个人空间</a><br><a href="https://github.com/eastmountyxz/CSDNBlog-Security-Based">CSDNBlog-Security-Based —— GitHub</a><br><a href="https://xz.aliyun.com/t/4205">IDA Pro7.0使用技巧总结</a></p>
<h2 id="安卓逆向"><a href="#安卓逆向" class="headerlink" title="安卓逆向"></a>安卓逆向</h2><p>dex文件<br>smali语法<br>工具：AndroidStudio, apktool, JEB, APKIDE, dex2jar<br>参考：<a href="https://cloud.tencent.com/developer/article/1548700">Android 逆向工具篇—反编译工具的选择与使用</a></p>
<h2 id="PYTHON-逆向"><a href="#PYTHON-逆向" class="headerlink" title="PYTHON 逆向"></a>PYTHON 逆向</h2><p>使用工具 PyInstaller Extractor ( pyinstxtractor ) 和 python-uncompyle6。PyInstaller Extractor 可以把 PyInstaller 解包成 pyc 文件，而 uncompyle6 可以把 pyc 的字节码反编译回 python 的代码。</p>
<p>如果选择在线的 pyc 反编译网站，如 <a href="https://tool.lu/pyc/">https://tool.lu/pyc/</a>，有概率出现精度问题。</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>安装 pwntools<br>终端输入：pip install pwn</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="Linux-提权"><a href="#Linux-提权" class="headerlink" title="Linux 提权"></a>Linux 提权</h2><p>主要用的工具是 LinPEAS<br>工具参考：<a href="https://www.freebuf.com/articles/network/274223.html">Linux权限提升：自动化信息收集</a></p>
<h2 id="Docker-逃逸"><a href="#Docker-逃逸" class="headerlink" title="Docker 逃逸"></a>Docker 逃逸</h2><p>参考：<a href="https://www.freebuf.com/articles/container/242763.html">初识Docker逃逸</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h1><p>流量分析、电子取证、人肉搜索、数据分析、图片隐写等等。</p>
<p>常见题目类型与解答：<br><a href="https://www.freebuf.com/column/228957.html">CTF-MISC(编码篇)</a><br><a href="https://www.freebuf.com/articles/web/232141.html">CTF-MISC(隐写篇)</a></p>
<p>帮助：<br><a href="https://ctf-wiki.org/misc/introduction/">CTF-Wiki 杂项简介</a><br><a href="https://www.cnblogs.com/sec-wuyy/p/14593000.html">Ctf之Misc 操作总结</a><br><a href="https://www.freebuf.com/sectool/282074.html">CTF MISC(杂项) 基本工具总结</a></p>
<h2 id="社会工程学"><a href="#社会工程学" class="headerlink" title="社会工程学"></a>社会工程学</h2><p>帮助：<a href="https://www.anquanke.com/post/id/164831">图片信息挖掘示例</a></p>
<h2 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h2><p>tea 加密（Tiny Encryption Algorithm，TEA），ctf 中常见的微型加密算法，也常出现在web，逆向等题目中。它使用了一个常数作为倍数，源于黄金比率，程序中一般写作 0x9E3779B9 。但有时该常数会以减法的形式出现，-0x61C88647 = 0x9E3779B9，因此题目出现了 0x61C88647 该常数时也应当注意。<br>参考：<a href="https://blog.csdn.net/A951860555/article/details/120073984">tea系列加密算法学习笔记</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="零散知识"><a href="#零散知识" class="headerlink" title="零散知识"></a>零散知识</h2><p><a href="http://www.jsfuck.com/">JS Fuck, “[][(![]+[])“ 类似的 js 代码，可复制浏览器控制台执行</a><br><a href="https://www.jianshu.com/p/14437764eff3">JS 执行 Base64 编码 —— 编码：window.btoa()，解码：window.atob()</a><br><a href="https://blog.csdn.net/kelxLZ/article/details/111893448">Python开发常见漏洞</a><br><a href="https://www.cnblogs.com/echojson/p/12805102.html">什么是会话固定攻击？</a><br><a href="https://blog.csdn.net/JieDG/article/details/106106680">信息收集之——旁站、C段</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h3 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h3><p>此内容经常在商城系统中进行考察。</p>
<h4 id="TOCTTOU攻击"><a href="#TOCTTOU攻击" class="headerlink" title="TOCTTOU攻击"></a>TOCTTOU攻击</h4><p>参考：<a href="https://www.cnblogs.com/liqiuhao/p/9450093.html">关于TOCTTOU攻击的简介</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="DDOS攻击-Distributed-Denial-of-Service"><a href="#DDOS攻击-Distributed-Denial-of-Service" class="headerlink" title="DDOS攻击 (Distributed Denial of Service)"></a>DDOS攻击 (Distributed Denial of Service)</h2><p>帮助：<a href="https://www.jianshu.com/p/dff5a0d537d8">DDoS攻击</a></p>
<p>个人认为可能的设置：将平时对业务处理验证的认真程度分级，当流量不大时，使用正常的处理流程；处理流量过大时，自动增加一些验证手段，如：复杂的数据库查询业务需要先输入验证码、暂停复杂的业务、和服务器之间连接的时长减短、对频繁操作的 IP 地址做限制(但可能误伤同一内网 IP 的用户)等。</p>
<h3 id="传统攻击"><a href="#传统攻击" class="headerlink" title="传统攻击"></a>传统攻击</h3><ol>
<li><p>ICMP Flood<br>即Ping攻击</p>
</li>
<li><p>UDP Flood<br>用简单的TCP/IP服务，如Chargen和Echo来传送毫无用处的占满带宽的数据。通过伪造与某一主机的Chargen服务之间的一次的UDP连接，回复地址指向开着Echo服务的一台主机，这样就生成在两台主机之间的足够多的无用数据流</p>
</li>
<li><p>SYN Flood<br>TCP洪水攻击是当前最流行的 DoS（拒绝服务攻击）与 DDoS（分布式拒绝服务攻击）的方式之一，这是一种利用 TCP 协议缺陷，发送大量伪造的 TCP 连接请求，常用假冒的 IP 或 IP 号段发来海量的请求连接的第一个握手包（SYN包），被攻击服务器回应第二个握手包（SYN+ACK包），因为是假冒IP，所以攻击方永远收不到包且不会回应第三个握手包。导致被攻击服务器保持大量SYN_RECV状态的“半连接”，并且会重试默认5次回应第二个握手包，塞满TCP等待连接队列，资源耗尽(CPU满负荷或内存不足) <br /><br>防御:<br>SYN Cookie，但存在 ACK Flood 攻击缺陷<br>SYN Cache，会保存SYN包里面的所有的字段，这是SYN Cookie做不到的。<br>SYN Proxy，当一个TCP请求从客户端发出时，首先与该握手代理进行三次握手，其采用SYN Cookie技术，只有该请求通过cookie合法性校验，代理服务器才会与服务器进行真正的TCP三次握手。其缓解了ddos攻击，但攻击规模足够大就防御不住。<br /><br>参考：<a href="https://www.jianshu.com/p/c4fcecc2fd2e">SYN-Flood攻击解决办法？</a><br><a href="http://blog.chinaunix.net/uid-20357359-id-1963527.html">关于SYN Cookie和SYN Cache的再次讨论</a><br><a href="https://blog.csdn.net/pengzhouzhou/article/details/88422595">浅谈SYNPROXY</a></p>
</li>
<li><p>HTTP Flood ( CC攻击 )<br>HTTP Flood又称CC攻击(ChallengeCollapsar，挑战黑洞，黑洞是以前一个抵抗DDoS攻击设备的名字)，是针对Web服务在第七层协议发起的攻击。通过向Web服务器发送大量 HTTP 请求来模仿网站访问者以耗尽其资源，尤其要请求那些导致复杂数据库查询等操作的资源。提供服务的企业只要尽量少用动态网页并且让一些操作提供验证码就能抵御一般的CC攻击。</p>
</li>
<li><p>ACK Flood<br>在TCP连接建立之后，所有的数据传输TCP报文都是带有ACK标志位的，主机在接收到一个带有ACK标志位的数据包的时候，需要检查该数据包所表示的连接四元组是否存在，如果存在则检查该数据包所表示的状态是否合法，然后再向应用层传递该数据包。如果在检查中发现该数据包不合法，例如该数据包所指向的目的端口在本机并未开放，则主机操作系统协议栈会回应RST包告诉对方此端口不存在。 <br /><br>目前ACK Flood并没有成为攻击的主流，而通常是与其他攻击方式组合在一起使用。回顾前面描述的SYN Cookie算法，其核心思想是主动回应SYN/ACK包，然后校验第3次握手的ACK报文是否合法，目前大多数实现中校验ACK报文的合法性都涉及到较为复杂的算法。当SYN Flood与ACK Flood一起发生的时候， 主机和防火墙将耗费大量的精力来计算ACK报文是否合法以致不堪重负。</p>
</li>
</ol>
<h3 id="反射放大攻击-Distributed-Reflection-Denial-of-Service"><a href="#反射放大攻击-Distributed-Reflection-Denial-of-Service" class="headerlink" title="反射放大攻击 (Distributed Reflection Denial of Service)"></a>反射放大攻击 (Distributed Reflection Denial of Service)</h3><p><a href="https://blog.csdn.net/RBPicsdn/article/details/80786182">渗透测试学习笔记-DDoS攻击</a><br><a href="https://www.jianshu.com/p/d5ed120c2e04">反射型DDoS攻击原理及防护</a></p>
<ol>
<li>NTP Flood<br>NTP (Network Time Protocol，网络时间协议) 是一种通过因特网服务于计算机时钟的同步时间协议。它提供了一种同步时间机制，能在庞大而复杂多样因特网中快速调整时间分配。NTP 包含一个 monlist 功能，也被称为 MON_GETLIST，主要用于监控 NTP 服务器，NTP 服务器响应 monlist 后就会返回与 NTP 服务器进行过时间同步的最后 600 个客户端的 IP，响应包按照每 6 个 IP 进行分割，最多有 100 个响应包。</br>
[NTP Reply Flood Attack （NTP反射型DDos攻击）](https://2cto.com/article/201402/280951.html)
[了解NTP DDOS攻击原理](http://jaminzhang.github.io/security/understand-udp-flood-ddos-attack/)</li>
</ol>
<ol start="2">
<li>SSDP Flood</li>
</ol>
<ol start="3">
<li>DNS Flood</li>
</ol>
<h3 id="低速率拒绝服务攻击-low-rate-denial-of-service-简称LDoS"><a href="#低速率拒绝服务攻击-low-rate-denial-of-service-简称LDoS" class="headerlink" title="低速率拒绝服务攻击 (low-rate denial-of-service,简称LDoS)"></a>低速率拒绝服务攻击 (low-rate denial-of-service,简称LDoS)</h3><ol>
<li>slowloris<br>HTTP Request以\r\n\r\n（0d0a0d0a）结尾表示客户端发送结束。攻击者在HTTP请求头中将Connection设置为Keep-Alive，要求Web Server保持TCP连接不要断开，随后缓慢地每隔几分钟发送一个key-value格式的数据到服务端，如a:b\r\n，但一直不发送\r\n\r\n，导致服务端认为HTTP头部没有接收完成</li>
<li>Slow HTTP POST<br>在POST提交方式中，允许在HTTP的头中声明content-length，也就是POST内容的长度。<br>在提交了header并将content-length设置足够大以后，将后面的body部分卡住不发送，这时服务器在接受了POST长度以后，就会等待客户端发送POST的内容，攻击者保持连接并且以10S-100S一个字节的速度去发送，就达到了消耗资源的效果</li>
<li>Slow Read attack<br>采用调整TCP协议中的滑动窗口大小，来对服务器单次发送的数据大小进行控制，使得服务器需要对一个回应分成很多个包来发送。</li>
</ol>
<p>参考：<a href="https://blog.csdn.net/qinyushuang/article/details/43274383">慢速连接攻击</a><br><a href="https://forum.huawei.com/enterprise/zh/forum.php?mod=viewthread&tid=367981">HTTP慢速攻击与防御</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">


<h2 id="水坑攻击"><a href="#水坑攻击" class="headerlink" title="水坑攻击"></a>水坑攻击</h2><p>“水坑攻击”，黑客攻击方式之一，顾名思义，是在受害者必经之路设置了一个“水坑(陷阱)”。最常见的做法是，黑客分析攻击目标的上网活动规律，寻找攻击目标经常访问的网站的弱点，先将此网站“攻破”并植入攻击代码，一旦攻击目标访问该网站就会“中招”。</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="鱼叉攻击"><a href="#鱼叉攻击" class="headerlink" title="鱼叉攻击"></a>鱼叉攻击</h2><p>只针对特定目标进行攻击的网络钓鱼攻击。</p>
<p>利用木马程序作为电子邮件的附件，发送到目标电脑上，诱导受害者去打开附件来感染木马</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="漏洞记录"><a href="#漏洞记录" class="headerlink" title="漏洞记录"></a>漏洞记录</h1><p>待补充······<br>按时间从新到旧排列<br>payload可以直接上GitHub上搜索</p>
<p>这里有一个频繁更新 CVE 的 Github 项目：[CVE PoC]</p>
<h2 id="1-php"><a href="#1-php" class="headerlink" title="1. php"></a>1. php</h2><table>
<thead>
<tr>
<th>漏洞</th>
<th>时间</th>
<th>影响范围</th>
<th>漏洞类型</th>
<th>参考</th>
<th>复现</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Thinkphp5 RCE <br/> CNVD-2018-24942</td>
<td>2018.12.10</td>
<td>ThinkPHP 5.0.x ~ 5.0.23 <br/> ThinkPHP 5.1.x ~ 5.1.31 <br/> ThinkPHP 5.2.0 beta1</td>
<td>高危RCE</td>
<td><a href="http://blog.nsfocus.net/thinkphp-full-version-rce-vulnerability-analysis/">THINKPHP 全版本远程代码执行漏洞分析</a> <br/> <a href="https://www.chabug.org/audit/1078.html">Thinkphp5 RCE总结</a></td>
<td><a href="https://adworld.xctf.org.cn/task/task_list?type=web&number=3&grade=1">攻防世界php_rce</a></td>
<td>ThinkPHP5x 远程代码执行漏洞</td>
</tr>
</tbody></table>
<ul>
<li>| - | - | - | - | - | - </li>
</ul>
<h2 id="2-Linux-提权"><a href="#2-Linux-提权" class="headerlink" title="2. Linux 提权"></a>2. Linux 提权</h2><table>
<thead>
<tr>
<th>漏洞</th>
<th>时间</th>
<th>影响范围</th>
<th>漏洞类型</th>
<th>参考</th>
<th>复现</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>CVE-2021-3156</td>
<td>2021.01.27</td>
<td>sudo: 1.8.2 ~ 1.8.31p2 <br/> sudo: 1.9.0 ~ 1.9.5p1</td>
<td>高危</td>
<td><a href="https://cloud.tencent.com/developer/article/1785234">Linux sudo权限提升漏洞复现（CVE-2021-3156）</a> <br/> <a href="https://www.qualys.com/2021/01/26/cve-2021-3156/baron-samedit-heap-based-overflow-sudo.txt">baron-samedit-heap-based-overflow-sudo</a></td>
<td>略</td>
<td>Linux 本地提权</td>
</tr>
</tbody></table>
<ul>
<li>| - | - | - | - | - | -</li>
</ul>
<h2 id="3-router"><a href="#3-router" class="headerlink" title="3. router"></a>3. router</h2><p>路由器漏洞</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="密码学-1"><a href="#密码学-1" class="headerlink" title="密码学"></a>密码学</h1><p>待补充······<br>对称加密和非对称加密<br>常见加密算法及其实现</p>
<p><a href="https://blog.csdn.net/weixin_43946212/article/details/108116251">分组密码的模式——ECB、CBC、CFB、OFB、CTR</a></p>
<p>线性同余法：一种经典的产生伪随机数的方法。</p>
<p>题目：如果要产生随机数，并保证使用时不重复使用之前用过的值，有什么办法：</p>
<ol>
<li>一次性生成随机数的库，每次取出其中一个来使用。</li>
<li>或者可以用彩虹表储存，既对一个随机数，连续 hash n 次的结果都不在已知的彩虹表内，说明没有被使用过，那么可以使用它，并把 hash 的结果储存在彩虹表内</li>
</ol>
<p>防御：</p>
<ol>
<li>对于彩虹表，可以加盐防御，盐要妥善保存在服务器的配置文件中。</li>
</ol>
<h2 id="PKI-Public-Key-Infrastructure-公钥基础设施"><a href="#PKI-Public-Key-Infrastructure-公钥基础设施" class="headerlink" title="PKI(Public Key Infrastructure) 公钥基础设施"></a>PKI(Public Key Infrastructure) 公钥基础设施</h2><p>PKI 包含：证书机构CA、注册机构 RA(Registration Authority)、数字证书库、密钥备份及恢复系统、证书撤销系统、密钥更新机制等。<br><a href="https://wiki.mbalib.com/wiki/%E5%85%AC%E9%92%A5%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD">公钥基础设施 —— wiki.mbalib</a><br><a href="https://www.cnblogs.com/boltkiller/articles/5732415.html">PKI公钥基础设施简介</a><br><a href="https://blog.csdn.net/qq_39249347/article/details/107458831">公钥基础设施目的和证书X.509介绍</a><br><a href="https://zhuanlan.zhihu.com/p/24954346">公钥基本结构(PKI)的概念</a><br><a href="https://zhuanlan.zhihu.com/p/377562137">一篇文章带您读懂公钥基础设施（PKI ）体系</a><br><a href="https://blog.csdn.net/carolzhang8406/article/details/79458206">PKI和CA 介绍</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="安全工具使用和实现原理"><a href="#安全工具使用和实现原理" class="headerlink" title="安全工具使用和实现原理"></a>安全工具使用和实现原理</h1><h2 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h2><p>帮助：<a href="https://zing.gitbooks.io/kali-lunix/content/">Kali Linux 工具使用中文说明书</a></p>
<h2 id="Burp-Suite"><a href="#Burp-Suite" class="headerlink" title="Burp Suite"></a>Burp Suite</h2><p>安装方式：<br>Kali 自带社区版，如果要安装功能更多的 Burp Suit Pro，可以找破解版，或者参考前文链接<a href="https://blog.csdn.net/kaihang_cai/article/details/119791713">安装kali linux后的准备工作</a>。区别其实不大，主要是爆破时能用更快速率发包（自己写脚本亦无不可）等。</p>
<p>帮助：<br><a href="https://t0data.gitbooks.io/burpsuite/content/chapter1.html">Burp Suite 指南</a><br><a href="https://blog.csdn.net/weixin_44037296/article/details/102781785">Burp Suite中Intruder模块的使用详解</a><br><a href="https://portswigger.net/bappstore">Burp 扩展 BApp Store</a><br><a href="https://t0data.gitbooks.io/burpsuite/content/chapter15.html">Burp Suite应用商店插件的使用</a><br><a href="https://www.pa55w0rd.online/burp-plugins/#more">Burp插件收集</a></p>
<h2 id="sqlmap"><a href="#sqlmap" class="headerlink" title="sqlmap"></a>sqlmap</h2><p>使用：<br>sql -u “url” -r request.txt –data=”id=1” –cookie=”cookie” –level 3 –batch<br>–dbs                              枚举DBMS所有的数据库<br>–tables                          枚举DBMS数据库中所有的表<br>–columns                      枚举DBMS数据库表中所有的列<br>–count                         检索表的条目的数量<br>–dump                         存储DBMS数据库的表中的条目<br>–dump-all                     存储DBMS所有数据库表中的条目<br>–D db                          指定进行枚举的数据库名称<br>–T   table                     指定进行枚举的数据库表名称<br>–C   column                 指定进行枚举的数据库列名称<br>–tamper                      指定脚本修改数据绕过WAF等，官方提供了一些脚本</p>
<p><a href="https://www.cnblogs.com/iAmSoScArEd/articles/9263735.html">sqlmap常用操作命令</a><br><a href="https://www.freebuf.com/sectool/164608.html">超详细SQLMap使用攻略及技巧分享</a><br><a href="https://www.cnblogs.com/insane-Mr-Li/p/10150165.html">sqlmap命令详解</a><br><a href="https://blog.csdn.net/smli_ng/article/details/106026901">sqlmap使用</a><br><a href="https://www.cnblogs.com/itants/p/12141606.html">利用sqlmap进行POST注入</a><br><a href="https://cloud.tencent.com/developer/article/1380102">sqlmap tamper脚本编写</a><br><a href="https://www.jianshu.com/p/53b447d65979">SQLMap之Tamper篡改脚本的类型、作用、适用场景</a></p>
<p>原理：<br><a href="https://iassas.com/archives/e409b646.html">SQLMap 原理分析 (一)</a><br><a href="https://iassas.com/archives/782ab1db.html">SQLMap 原理分析 (二)</a><br><a href="https://blog.csdn.net/somnuszhigang/article/details/103163942">sqlmap os-shell原理</a></p>
<p>课外阅读：<br><a href="https://blog.csdn.net/qq_27446553/article/details/53291898">使用Sqlmap的你可能踩中了“蜜罐”</a><br><a href="https://blog.csdn.net/DaoDivDiFang/article/details/106899847">关于/dev/tcp/host/port</a></p>
<h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><p>帮助：<br><a href="https://cloud.tencent.com/developer/article/1702022">nmap 简介和简单使用</a><br><a href="https://cloud.tencent.com/developer/article/1622128">Nmap 详细介绍和使用</a></p>
<p>扫描出的端口状态如下：<br>open：端口是开放的。<br>closed：端口是关闭的。<br>filtered：端口被防火墙IDS/IPS屏蔽，无法确定其状态。<br>unfiltered：端口没有被屏蔽，但是否开放需要进一步确定</p>
<p>使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 快扫常用，-sS 参数表示使用 TCP SYN扫描（半开扫描），执行速度快，隐蔽且效率高；-sV 表示使用版本探测；-F 表示快速扫描模式，比默认的扫描端口还少</span></span><br><span class="line">nmap -sS -v -sV -p 1-65535 -Pn 域名/IP</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -oN filename 正常输出到文件 (Normal Output To A File)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -oX filename 将扫描结果生成 xml 文件，如果中断，则结果打不开</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -oG filename 该输出易与Grep工具一起使用(Grep-able Output To A File)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -oA filename 以上述三种格式输出到文件(Output To A File In All Formats)，中断后，结果也可保存(待确认)</span></span><br><span class="line">nmap -oN myscan 域名/IP</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参数 -v 或 -vv 都可在扫描时显示详细信息</span></span><br><span class="line">nmap -vv 域名/IP</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 扫描指定端口，可以指定范围如 -p1-65536，或 -p80,443，可以无空格</span></span><br><span class="line">nmap -p端口 域名/IP</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用参数 -A 同时进行操作系统探测和版本探测等，相当于包含了 -O 和 -sV 参数的功能</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --version-intensity 设定扫描强度，以应对做了伪装的软件</span></span><br><span class="line">nmap -A --version-intensity 1(1-10) 域名/IP</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -Pn 表示不进行Ping扫描；-sn: Ping Scan 表示ping扫描，用于发现主机，不进行端口扫描。-n/-R: -n表示不进行DNS解析；-R表示总是进行DNS解析。</span></span><br><span class="line">nmap -Pn -n 域名/IP</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 伪装扫描</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  -D &lt;decoy1,decoy2[,ME],...&gt;: Cloak a scan with decoys将真实IP地址和其他主机的IP地址混合使用，目标主机将回复大量数据包到不存在的主机，降低被发现概率</span></span><br><span class="line"><span class="meta">#</span><span class="bash">  -S &lt;IP_Address&gt;: Spoof <span class="built_in">source</span> address</span></span><br><span class="line">nmap -D 假域名/IP 域名/IP</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --traceroute: 追踪每个路由节点；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --open：只显示打开状态的端口；</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --stats-every xx(xx is a number: 定期打印扫描状态</span> </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 暴力破解出子域名及对应的ip地址</span></span><br><span class="line">nmap --script=dns-brute 域名</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 扫描服务器的常见漏洞</span></span><br><span class="line">nmap --script=vuln 域名/IP</span><br></pre></td></tr></table></figure>

<p>原理：<br><a href="https://blog.csdn.net/aspirationflow/article/details/7694274">Nmap扫描原理与用法</a></p>
<p>另外，图形化 nmap 是 Zenmap，其他类似 nmap 的工具有：<a href="https://zhuanlan.zhihu.com/p/257806472">masscan</a><br>masscan 被设计用于快速地扫描整个互联网，虽然快，但只能扫描端口。可以先使用masscan扫描开启的端口，再用nmap进行详细的扫描。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">masscan -p 1-65535 --rate 1000 IP</span><br></pre></td></tr></table></figure>

<h2 id="Metasploit-Framework"><a href="#Metasploit-Framework" class="headerlink" title="Metasploit Framework"></a>Metasploit Framework</h2><p>使用参考：<br><a href="https://www.freebuf.com/articles/web/271173.html">Metasploit工具之基本操作</a><br><a href="https://www.freebuf.com/sectool/304676.html">Metasploit</a><br><a href="https://www.freebuf.com/articles/network/201331.html">Metasploit快速入门</a><br><a href="https://www.cnblogs.com/dogecheng/p/11450423.html">MSF——基本使用 - 那少年和狗 - 博客园</a><br><a href="https://xz.aliyun.com/t/2536">后渗透之meterpreter使用攻略</a></p>
<h2 id="IDA-Pro"><a href="#IDA-Pro" class="headerlink" title="IDA Pro"></a>IDA Pro</h2><p>待补充······<br>需要破解，或者付比较昂贵的费用。</p>
<p>下载链接（未审核）：<a href="https://www.nite07.com/ida/">IDA Pro 7.6.210427 SP1</a><br>破解工具链接（未审核）：<a href="https://h4ck.org.cn/2021/08/ida-pro-7-6-sp1-keygen/">IDA Pro 7.6 SP1 Keygen</a></p>
<p>帮助：<br><a href="https://blog.csdn.net/hgy413/article/details/50594320">IDA - XREF（交叉引用）是什么意思</a><br>上面的文章对应的专栏也可一看<br><a href=""></a></p>
<h2 id="x64dbg"><a href="#x64dbg" class="headerlink" title="x64dbg"></a>x64dbg</h2><p>官网：<br><a href="https://x64dbg.com/">https://x64dbg.com/</a><br><a href="https://github.com/x64dbg/x64dbg">https://github.com/x64dbg/x64dbg</a></p>
<p>下载时可以考虑 <a href="https://github.com/x64dbg/x64dbg/releases">GitHub</a> 里的地址，速度比 <a href="https://sourceforge.net/projects/x64dbg/files/snapshots/">SourceForge</a> 的要快一点。</p>
<p>安装只需解压，然后根据要反汇编的样本是 64 位还是 32 位分别运行x64dbg.exe 或 x32dbg.exe 即可，如果不知道位数可以运行 x96dbg.exe</p>
<h2 id="AWVS"><a href="#AWVS" class="headerlink" title="AWVS"></a>AWVS</h2><p>安装 docker 版 AWVS 步骤：</p>
<ol>
<li><p>拉取下载镜像</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull secfa/docker-awvs</span><br></pre></td></tr></table></figure></li>
<li><p>将 Docker 的3443端口映射到服务器的 3443端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it -d -p 3443:3443 secfa/docker-awvs</span><br></pre></td></tr></table></figure></li>
</ol>
<p>11版本后使用了B/S架构，使用时浏览器访问：<a href="https://ipaddress:3443/">https://IPaddress:3443</a><br>一般本地 ip address 是127.0.0.1</p>
<p>默认登录用户名和密码：<br>username: <a href="mailto:&#x61;&#100;&#x6d;&#x69;&#x6e;&#64;&#97;&#100;&#109;&#x69;&#110;&#x2e;&#99;&#111;&#109;">&#x61;&#100;&#x6d;&#x69;&#x6e;&#64;&#97;&#100;&#109;&#x69;&#110;&#x2e;&#99;&#111;&#109;</a><br>password: Admin123</p>
<p>帮助：<br><a href="https://www.sqlsec.com/2020/04/awvs.html">AWVS13.X 破解版 Windows、Linux、Docker 安装</a><br><a href="https://blog.csdn.net/weixin_44203158/article/details/106376148">AWVS acunetix_WVS13下载、安装及简单使用</a><br><a href="https://blog.csdn.net/qq_42902587/article/details/108034151">AWVS在Linux下修改登录邮箱与密码</a><br><a href="https://cloud.tencent.com/developer/article/1480771">超详细版 AWVS10.5 中文教程</a><br><a href="https://www.anquanke.com/post/id/83047">如何优雅的反击用 AWVS 10 扫描你网站的黑客</a></p>
<h2 id="Nessus"><a href="#Nessus" class="headerlink" title="Nessus"></a>Nessus</h2><p>安装 docker 版 Nessus 步骤：</p>
<ol>
<li><p>拉取下载镜像，可在 <a href="https://hub.docker.com/u/library">Docker Hub</a> 里搜索，点击 tag ，会给出相应拉取镜像的命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull tenableofficial/nessus:latest</span><br></pre></td></tr></table></figure></li>
<li><p>将 Docker 的 8834 端口映射到服务器的 8834 端口</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -it -d -p 8834:8834 tenableofficial/nessus</span><br></pre></td></tr></table></figure></li>
</ol>
<p>它和 AWVS 同样都是B/S架构，使用时浏览器访问：<a href="https://ipaddress:8834/">https://IPaddress:8834</a></p>
<p>随后需要选择版本并通过邮箱获取激活码，并设置登录用户名和密码。</p>
<p>帮助：<a href="https://zhuanlan.zhihu.com/p/395459622">Nessus详细使用教程</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h2 id="其他安全工具"><a href="#其他安全工具" class="headerlink" title="其他安全工具"></a>其他安全工具</h2><p>MSF、appscan、gg修改器安全狗等</p>
<h3 id="Coblat-Strike"><a href="#Coblat-Strike" class="headerlink" title="Coblat Strike"></a>Coblat Strike</h3><p>参考：<br><a href="https://wiki.wgpsec.org/knowledge/intranet/Cobalt-Strike.html">Cobalt Strike 向导</a><br><a href="https://cloud.tencent.com/developer/article/1666653">Cobalt Strike入门宝典</a><br><a href="https://www.secpulse.com/newpage/author?author_id=18480">Cobalt Strike 系列教程，列出链接如下</a></p>
<ol>
<li><a href="https://www.secpulse.com/archives/124244.html">Cobalt Strike｜从入门到入狱</a></li>
<li><a href="https://www.secpulse.com/archives/124346.html">Cobalt Strike番外｜设置kali2020自启动 </a></li>
<li><a href="https://www.secpulse.com/archives/124454.html">Cobalt Strike｜Beacon原理浅析 </a></li>
<li><a href="https://www.secpulse.com/archives/124891.html">Cobalt Strike|发送钓鱼邮件 </a></li>
<li><a href="https://www.secpulse.com/archives/124838.html">Cobalt Strike｜配置转发器</a></li>
<li><a href="https://www.secpulse.com/archives/124935.html">Cobalt Strike｜DNS Beacon </a></li>
<li><a href="https://www.secpulse.com/archives/125817.html">Cobalt Strike｜浏览器转发 </a></li>
<li><a href="https://www.secpulse.com/archives/129089.html">Cobalt Strike 上线微信提醒</a></li>
</ol>
<h3 id="Wappalyzer"><a href="#Wappalyzer" class="headerlink" title="Wappalyzer"></a>Wappalyzer</h3><p>浏览器扩展，可以检测网站使用的技术，浏览器的扩展商店搜索安装即可。<br>参考：<a href="https://www.cnblogs.com/helingjuan/p/10673252.html">好用的插件：Wappalyzer 检测网站使用的技术</a></p>
<h3 id="HttpCanary"><a href="#HttpCanary" class="headerlink" title="HttpCanary"></a>HttpCanary</h3><p>参考：<a href="https://cloud.tencent.com/developer/article/1858095">Android 抓包工具——HttpCanary</a></p>
<h3 id="Charles"><a href="#Charles" class="headerlink" title="Charles"></a>Charles</h3><p>还有 fiddler 等抓包工具<br>参考：<a href="https://crifan.github.io/app_capture_package_tool_charles/website/">app抓包利器：Charles</a></p>
<h3 id="dsploit"><a href="#dsploit" class="headerlink" title="dsploit"></a>dsploit</h3><p>Android 下的 dsploit，是一款手机上的渗透测试套件，需要 root 权限，其后继者是 <a href="https://github.com/cSploit/android/releases">cSploit</a>， zANTI 等。它支持中间人攻击，脚本注入，伪造数据包，端口扫描等功能。</p>
<p>dSploit 的核心开发者有两个。2014 年秋时，其中一个（同时是 dSploit 创始者）决定把 dSploit 并入 zANTI ，并加入了 zANTI 所在的公司。另一个可能不太高兴，虽然 dSploit 创始者说 zANTI2 也会开源，不过他等不及了，他决定自己 fork 一个分支出来去完善，这个分支就是 cSploit。</p>
<h3 id="mitmproxy"><a href="#mitmproxy" class="headerlink" title="mitmproxy"></a>mitmproxy</h3><p>用于中间人攻击的代理，MITM 即中间人攻击（Man-in-the-middle attack）。<br>其他类似的有 SSLStrip 等。</p>
<p>参考：<a href="https://www.cnblogs.com/grandlulu/p/9525417.html">使用 mitmproxy + python 做拦截代理</a></p>
<h3 id="ssdeep"><a href="#ssdeep" class="headerlink" title="ssdeep"></a>ssdeep</h3><p>基于模糊哈希（Fuzzy Hashing）算法的工具。防御端通过搜集大量已知样本，制作样本库，使用ssdeep进行相似度比对，可快速发现入侵。<br>参考：<a href="https://cloud.tencent.com/developer/article/1366565">webshell指纹-ssdeep</a></p>
<h3 id="PingTools-Pro"><a href="#PingTools-Pro" class="headerlink" title="PingTools Pro"></a>PingTools Pro</h3><p>Android 平台的网络工具，包含局域网设备 IP、mac 地址查看，端口扫描，UPnP 设备扫描等功能。<br>参考：<a href="https://www.yxssp.com/36617.html">PingTools Pro v4.52 Pro for Android 解锁专业版 —— 一款简单但功能强大的网络实用工具集</a></p>
<h3 id="LibChecker"><a href="#LibChecker" class="headerlink" title="LibChecker"></a>LibChecker</h3><p>Android 平台的一个 APP 应用架构查看分析工具，包括 App 的 ABI 架构查看和统计（32 位 / 64 位）、原生库的查看、四大组件的查看（服务、活动、广播接收器、内容提供器），用于协助逆向 APP 。<br>酷安市场可以下载：<a href="https://www.coolapk.com/apk/com.absinthe.libchecker">LibChecker - 应用架构查看</a></p>
<h3 id="LOIC"><a href="#LOIC" class="headerlink" title="LOIC"></a>LOIC</h3><p>翻译含义大概是：低轨道离子加农炮，是出名的 DDoS 软件，使用方法很简单。其实在 Kali，以及 Kali 内的 Metasploit Framework 里也有一系列 dos 工具。<br>下载：<br><a href="https://sourceforge.net/projects/loic/files/latest/download">https://sourceforge.net/projects/loic/files/latest/download</a></p>
<p>参考：<a href="https://www.jianshu.com/p/24d16d3a111e">Dos和DDos攻击，以及许多 Dos 工具的介绍</a></p>
<h3 id="Xray"><a href="#Xray" class="headerlink" title="Xray"></a>Xray</h3><p>一款不开源的安全评估工具，支持漏洞检测</p>
<p>地址（注意，应当下载里头的二进制文件）：<a href="https://github.com/chaitin/xray">https://github.com/chaitin/xray</a><br>教程：<a href="https://docs.xray.cool/">https://docs.xray.cool/</a></p>
<p>服务扫描，依赖于提供的 poc：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">快速检测单个目标</span><br><span class="line">./xray servicescan --target 127.0.0.1:8009</span><br><span class="line"></span><br><span class="line">批量检查的 1.file 中的目标, 一行一个目标，带端口</span><br><span class="line">./xray servicescan --target-file 1.file </span><br><span class="line"></span><br><span class="line">将检测结果输出到 json 文件中</span><br><span class="line">./xray servicescan --target 127.0.0.1:8099 --json-output 1.json </span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://cloud.tencent.com/developer/article/1612823">Web端漏洞扫描器 xray 总结</a></p>
<p>帮助：<a href="https://cloud.tencent.com/developer/article/1743264">谈谈不为人知的 xray 子域名</a></p>
<h3 id="XSStrike"><a href="#XSStrike" class="headerlink" title="XSStrike"></a>XSStrike</h3><p>XSStrike 是一款探测并利用XSS漏洞的脚本。</p>
<p>下载：<a href="https://github.com/s0md3v/XSStrike">XSStrike —— Github</a></p>
<p>帮助：<br><a href="https://www.cnblogs.com/-chenxs/p/12329506.html">XSStrike工具的安装和简单使用</a><br><a href="https://blog.csdn.net/lady_killer9/article/details/109105084">网络安全-XSStrike中文手册（自学笔记）</a><br><a href="https://blog.csdn.net/lady_killer9/article/details/109296718">网络安全-靶机pikachu之xss注入与代码分析（XSStrike实战）</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="简单算法编程"><a href="#简单算法编程" class="headerlink" title="简单算法编程"></a>简单算法编程</h1><p>数据结构：数组、字符串、栈、堆、哈希表、二叉树、图等<br>算法：二分查找、广度/深度搜索、动态规划等</p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">


<h1 id="总结与测验"><a href="#总结与测验" class="headerlink" title="总结与测验"></a>总结与测验</h1><p><a href="https://blog.csdn.net/maoji/article/details/52798467">安全漏洞概念及分类</a><br><a href="https://blog.csdn.net/tryheart/article/details/106818422">网络安全常见面试题 - 对于某些攻击的防御方法等</a><br><a href="https://blog.csdn.net/Butterfly_resting/article/details/89638424">几率大的网络安全面试题</a><br><a href="https://cookie.blog.csdn.net/article/details/109019491">渗透测试面试问题合集</a></p>
<p>计算机网络：<br><a href="https://blog.csdn.net/Royalic/article/details/119985591">计算机网络知识点全面总结</a><br><a href="https://www.runoob.com/w3cnote/summary-of-network.html#_label5">计算机网络基础知识总结</a><br><a href="https://www.cnblogs.com/xdyixia/p/9275246.html">计算机网络基础知识总结</a><br><a href="https://www.jianshu.com/p/a6f9c6e67324">传输层协议（TCP, UDP）</a><br>DNS 解析过程，访问一个网站经过的程序。</p>
<h1 id="课外阅读"><a href="#课外阅读" class="headerlink" title="课外阅读"></a>课外阅读</h1><p>打造工具：<br><a href="https://zhuanlan.zhihu.com/p/54756592">一个Python开源项目-腾讯哈勃沙箱源码剖析(上)</a><br><a href="https://zhuanlan.zhihu.com/p/54756845">一个Python开源项目-腾讯哈勃沙箱源码剖析(下)</a><br><a href="https://zhuanlan.zhihu.com/p/64904436">如何打造自己的PoC框架-Pocsuite3-框架篇</a></p>
<p>Javascript 相关：<br><a href="https://introspelliam.github.io/2017/11/12/misc/CTF%E6%AF%94%E8%B5%9B%E4%B8%AD%E5%85%B3%E4%BA%8Ejavascript%E7%9A%84%E6%80%BB%E7%BB%93/">CTF比赛中关于 javascript 的总结</a><br><a href="https://www.freebuf.com/articles/system/163579.html">JavaScript反调试技巧</a><br><a href="https://www.jianshu.com/p/38c4afae636c">彻底搞定反调试之无限debugger</a><br><a href="https://blog.csdn.net/lacoucou/article/details/105426934">JS 反混淆</a><br><a href="https://zhuanlan.zhihu.com/p/27310909">frame busting 各种姿势，防护总结</a></p>
<p>DNS 盲打：<br><a href="https://www.freebuf.com/column/184587.html">使用DNSLOG拯救你的盲打盲注</a><br><a href="https://blog.csdn.net/weixin_39190897/article/details/117197126">浅析DNSlog在渗透测试中的实战技巧</a><br><a href="http://betheme.net/news/txtlist_i137986v.html">dnslog平台盲打学习</a></p>
<p>渗透：<br><a href="https://cloud.tencent.com/developer/article/1480936">记一次无线渗透</a><br><a href="https://paradiseduo.blog.csdn.net/article/details/81478952">使用Metasploit(msf)通过ms17_010_eternalblue漏洞控制Windows电脑</a></p>
<p>YAML：<br><a href="https://www.runoob.com/w3cnote/yaml-intro.html">YAML 入门教程</a></p>
<p>xip.io:<br><a href="https://haoduck.com/675.html">xip.io</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1553922">Web缓存欺骗攻击</a></p>
<p>如何查看服务器被攻击的记录：<br>安全狗可以查看攻击记录<br><a href="">如何查看服务器被攻击的记录、日志等</a><br><a href="">入侵后如何清除入侵痕迹</a></p>
<p>SRC:<br><a href="https://www.jianshu.com/p/585d285d8d2f">公益SRC怎么挖 | SRC上榜技巧</a><br><a href="https://blog.csdn.net/qq_45414878/article/details/116569091">edusrc挖掘思路</a></p>
<p>CVE<br><a href="https://www.freebuf.com/news/168362.html">CVE申请的那些事</a><br><a href="https://www.cnblogs.com/bhlsheji/p/4076803.html">漏洞都是怎么编号的CVE/CAN/BUGTRAQ/CNCVE/CNVD/CNNVD</a></p>
]]></content>
      <categories>
        <category>security</category>
      </categories>
      <tags>
        <tag>security</tag>
      </tags>
  </entry>
  <entry>
    <title>AFL 简单介绍和使用</title>
    <url>/2021/11/16/2021-11-16/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>AFL（American Fuzzy Lop）是由安全研究员Michał Zalewski 开发的一款基于覆盖引导（Coverage-guided）的模糊测试工具，AFL主要用于C/C++程序的测试。</p>
<p>AFL 通过记录输入样本的代码覆盖率，不断对输入进行变异，从而达到更高的代码覆盖率，以增加发现漏洞的概率。AFL 采用新型的编译时插桩和<strong>遗传算法</strong>自动发现新的测试用例，这些用例会触发目标二进制文件中的新内部状态。这大大改善了模糊测试的代码覆盖范围。</p>
<span id="more"></span>

<h1 id="一、遗传算法（genetic-algorithm）"><a href="#一、遗传算法（genetic-algorithm）" class="headerlink" title="一、遗传算法（genetic algorithm）"></a>一、遗传算法（genetic algorithm）</h1><p>遗传算法是进化算法的一种。 进化算法最初是借鉴了进化生物学中的一些现象而发展起来的，这些现象包括遗传、突变、自然选择以及杂交等等。该算法通过编码将要求解的问题表示成遗传空间的染色体或者个体，将问题的求解过程转换成类似生物进化中的染色体基因的交叉、变异等过程。</p>
<p>遗传算法借鉴适者生存理论，拥有一个适应度函数也叫评价函数，是用来判断群体中的个体的优劣程度的指标，它是根据所求问题的目标函数来进行评估的。</p>
<p>遗传算法中初始群体中的个体是随机产生的。</p>
<p>每次迭代，从群体中选择优胜的个体，淘汰劣质个体，把优化的个体(或解)直接遗传到下一代或通过配对交叉产生新的个体再遗传到下一代。遗传时会出现交叉和变异。交叉是指把两个父代个体的部分结构加以替换重组而生成新个体的操作。变异是对群体中的个体串的某些基因座上的基因值作变动。</p>
<p>当最优个体的适应度达到给定的阈值，或者最优个体的适应度和群体适应度不再上升时，或者迭代次数达到预设的代数时，算法终止。预设的代数一般设置为100-500代。</p>
<h1 id="二、AFL-的使用步骤"><a href="#二、AFL-的使用步骤" class="headerlink" title="二、AFL 的使用步骤"></a>二、AFL 的使用步骤</h1><h2 id="1-获取-AFL"><a href="#1-获取-AFL" class="headerlink" title="1. 获取 AFL"></a>1. 获取 AFL</h2><p>Linux下，终端键入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install afl</span><br></pre></td></tr></table></figure>

<p>从 前 Google 安全研究员 lcamtuf 的个人网站上下载亦可：<br>进入 <a href="https://lcamtuf.coredump.cx/afl/releases/">https://lcamtuf.coredump.cx/afl/releases/</a>，下载并解压，输入make; make install 命令安装。<br>或终端输入命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://lcamtuf.coredump.cx/afl/releases/afl-latest.tgz</span><br><span class="line">tar -zxvf afl-latest.tgz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或其他文件夹名字</span></span><br><span class="line">cd afl-2.52b </span><br><span class="line"></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>

<p>GitHub 上下载亦可：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/google/AFL.git --depth=1</span><br><span class="line">cd afl</span><br><span class="line">make</span><br><span class="line">make install </span><br></pre></td></tr></table></figure>

<p>安装之后，输入 afl-fuzz 进行验证。</p>
<p>注：如果在 docker 中使用 AFL，在开启 container 时要加上 “—privileged” 选项，否则在执行某些命令时会报错。</p>
<h2 id="2-测试前置工作"><a href="#2-测试前置工作" class="headerlink" title="2. 测试前置工作"></a>2. 测试前置工作</h2><h3 id="指示系统将-coredumps-输出为文件"><a href="#指示系统将-coredumps-输出为文件" class="headerlink" title="指示系统将 coredumps 输出为文件"></a>指示系统将 coredumps 输出为文件</h3><p>如果系统配置为将核心转储文件（core）通知发送到外部程序，将导致把崩溃信息发送到 Fuzzer 的延迟增大，进而可能将崩溃误报为超时。<br>故而，需要执行以下命令指示系统临时将 coredumps 输出为文件(重启后失效)：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo core &gt; /proc/sys/kernel/core_pattern</span><br></pre></td></tr></table></figure>


<h2 id="3-白盒测试-有源码测试"><a href="#3-白盒测试-有源码测试" class="headerlink" title="3. 白盒测试(有源码测试)"></a>3. 白盒测试(有源码测试)</h2><h3 id="对测试内容进行插桩"><a href="#对测试内容进行插桩" class="headerlink" title="对测试内容进行插桩"></a>对测试内容进行插桩</h3><p>插桩技术指在保证原有程序逻辑完整性的基础上，在程序特定的位置插入代码段，从而收集程序运行时的上下文信息（方法本身、方法参数值、返回值等）。</p>
<p>这里我们使用 afl-gcc 进行源码插桩编译。afl-gcc/afl-g++ 是 gcc/g++ 的包装，它们的用法基本一样，前者会将接收到的参数传递给后者，我们编译程序时只需要将 gcc 替换为 afl-gcc/afl-g++ 就行。<br>如，对于单个测试用例 test.c</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -g，产生符号调试工具（GNU的gdb）所必要的符号资讯，要想对源代码进行调试，我们就必须加入这个选项。</span></span><br><span class="line">afl-gcc -g test.c -o test</span><br></pre></td></tr></table></figure>
<p>对于一个项目进行插桩编译，参考：<a href="https://www.freebuf.com/articles/system/191543.html">AFL漏洞挖掘技术漫谈 之 第五点：构建被测试程序</a></p>
<p>如果使用 LLVM 模式进行源码插桩，可以更快的进行 Fuzz，安装 AFL 时可根据需要选择安装 LLVM：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install clang</span><br><span class="line">sudo apt-get install llvm</span><br></pre></td></tr></table></figure>
<h3 id="选择初始语料库"><a href="#选择初始语料库" class="headerlink" title="选择初始语料库"></a>选择初始语料库</h3><p>AFL需要一些初始输入数据（也叫种子文件）作为 Fuzzing 的起点，就像遗传算法中的初始群体，这些输入甚至可以是毫无意义的数据。</p>
<p>可以从网上找语料库，<a href="https://www.freebuf.com/articles/system/191543.html">AFL漏洞挖掘技术漫谈 之 第四点：构建语料库</a> 中列出了一些语料库。</p>
<p>也可以自己随便建个文件输入一些字符串，比如 “Hello world” ，虽然有时效率不高，但对简单测试还是能用的。</p>
<h3 id="精简语料库"><a href="#精简语料库" class="headerlink" title="精简语料库"></a>精简语料库</h3><p>一般是当所有文件都用 tmin 处理完后，再利用 cmin 工具处理一次，从而达到最精简。</p>
<h4 id="AFL-TMIN"><a href="#AFL-TMIN" class="headerlink" title="AFL-TMIN"></a>AFL-TMIN</h4><p>AFL-TMIN 工具可以把我们提供的单个文件放到经过 afl 编译好的程序里执行，然后再按一定方式进行精简，从而缩减该测试用例的大小。它减小单个输入文件的大小，作用单位是单个文件。</p>
<p>命令：</p>
<blockquote>
<p>afl-tmin -i 需要精简的文件 -o 精简后的文件 测试程序</p>
</blockquote>
<p>afl-tmin有两种工作模式，instrumented mode和crash mode。<br>默认的工作方式是 instrumented mode，如果指定了参数 -x，就会调用 crash mode 模式，会把导致程序非正常退出的文件直接剔除。</p>
<h4 id="AFL-CMIN"><a href="#AFL-CMIN" class="headerlink" title="AFL-CMIN"></a>AFL-CMIN</h4><p>AFL-CMIN 是移除覆盖了相同的代码的输入文件，作用单位是一堆文件。</p>
<p>命令：</p>
<blockquote>
<p>afl-cmin -i 测试输入文件的文件夹 -o 筛选后的输入文件的文件夹 测试程序</p>
</blockquote>
<p>afl-cmin是每次用一个文件跟之前的比较，如果能达到上一个的效果，就替换掉上一个文件，因此至少会留下一个具有相同效果的文件。</p>
<h3 id="运行-AFL"><a href="#运行-AFL" class="headerlink" title="运行 AFL"></a>运行 AFL</h3><p>afl-showmap 工具用于跟踪单个输入用例的执行路径，可以进行最简单的实验。</p>
<p>而 afl-fuzz 用法如下：</p>
<blockquote>
<p>afl-fuzz -i 输入文件的文件夹 -o 输出文件夹 测试程序</p>
</blockquote>
<p>如果进入一个状态窗口，就表明已经开始 Fuzzing 了。以下是一些状态含义：</p>
<ol>
<li>process timing：Fuzzer运行时长、以及距离最近发现的路径、崩溃和挂起经过了多长时间。</li>
<li>overall results：Fuzzer当前状态的概述。</li>
<li>cycle progress：我们输入队列的距离。</li>
<li>map coverage：目标二进制文件中的插桩代码所观察到覆盖范围的细节。</li>
<li>stage progress：Fuzzer现在正在执行的文件变异策略、执行次数和执行速度。</li>
<li>findings in depth：有关我们找到的执行路径，异常和挂起数量的信息。</li>
<li>fuzzing strategy yields：关于突变策略产生的最新行为和结果的详细信息。</li>
<li>path geometry：有关Fuzzer找到的执行路径的信息。</li>
<li>CPU ：CPU利用率</li>
</ol>
<h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><p>查看输出文件夹，通常里面有三个文件夹：</p>
<p>Crashes文件夹：包含导致测试程序接收致命信号的测试用例，进入 crashes 可以看到触发得到的 crash，递增序列号代表每一个具有独特执行路径的测试用例。<br>分别查看各个 crash 样例，可以输入:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xxd 文件名</span><br></pre></td></tr></table></figure>

<p>hangs：包含导致测试程序超时的测试用例。</p>
<p>queue：包含每个独特执行路径的测试用例，以及用户给出的所有起始文件。</p>
<h2 id="4-黑盒测试-对二进制文件测试"><a href="#4-黑盒测试-对二进制文件测试" class="headerlink" title="4. 黑盒测试(对二进制文件测试)"></a>4. 黑盒测试(对二进制文件测试)</h2><p>使用 AFL 的 QEMU 模式。待补充。</p>
<p>参考：<br><a href="https://zhuanlan.zhihu.com/p/90037601">从AFL开始FUZZ之旅</a><br><a href="https://www.freebuf.com/articles/system/191543.html">AFL漏洞挖掘技术漫谈（一）：用AFL开始你的第一次Fuzzing</a><br><a href="https://blog.csdn.net/song_lee/article/details/104777149">经典 Fuzzer 工具 AFL 模糊测试指南</a><br><a href="https://bbs.pediy.com/thread-257399.htm">AFL学习笔记（上）</a></p>
]]></content>
      <categories>
        <category>security</category>
        <category>fuzz</category>
      </categories>
      <tags>
        <tag>security</tag>
        <tag>fuzz</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习之神经网络深度学习初探</title>
    <url>/2021/11/15/2021-11-15/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>BP(back propagation)神经网络是1986年由Rumelhart和McClelland为首的科学家提出的概念，是一种按照误差反向传播算法训练的多层前馈神经网络，是应用最广泛的传统神经网络模型之一。</p>
<p>帮助：<br><a href="https://www.jianshu.com/p/7a85f1832951">神经网络算法</a><br><a href="https://blog.csdn.net/u014595019/article/details/52554582">深度学习笔记</a><br><a href="https://www.bilibili.com/video/BV1UE411N7pD">Deeplizard《Pytorch神经网络高效入门教程》中文字幕版</a><br><a href="https://blog.csdn.net/zouxy09/article/details/8775518">Deep Learning（深度学习）学习笔记整理系列之（三）</a></p>
<span id="more"></span>

<h1 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h1><h2 id="多层前馈神经网络（multilayer-feedforward-neural-network）"><a href="#多层前馈神经网络（multilayer-feedforward-neural-network）" class="headerlink" title="多层前馈神经网络（multilayer feedforward neural network）"></a>多层前馈神经网络（multilayer feedforward neural network）</h2><p>多层前馈（multilayer feed-forward）神经网络也叫多层感知机（multilayer perceptron，MLP），采用一种单向多层结构，由一个输入层、一个或多个隐藏层和一个输出层组成，每一层都全连接到下一层，每个神经元只接收前一层的神经元的输出，并输出给下一层，各层间没有反馈。由于多层前馈网络的训练经常采用误差反向传播算法，人们也常将多层前馈网络直接称为BP（Back Propagation）网。<br><img src="https://img-blog.csdnimg.cn/f6d405ee8e4c49fcbd783b9c2e5ba977.png" alt="多层前馈神经网络" title="多层前馈神经网络"></p>
<h2 id="损失函数"><a href="#损失函数" class="headerlink" title="损失函数"></a>损失函数</h2><p>损失函数（loss function）或代价函数（cost function）是将随机事件或其有关随机变量的取值映射为非负实数以表示该随机事件的“风险”或“损失”的函数。损失函数通常作为学习准则与优化问题相联系，即需要通过最小化损失函数求解和评估模型。</p>
<p>这里我们一般认为是用来量化对比神经网络预测结果和期待结果之间的差异或损失，学习的过程就是使得学习的结果不断逼近损失最小值的过程。</p>
<p>分类问题所对应的损失函数为0-1损失。0-1损失函数是一个不连续的分段函数，不利于求解其最小化问题，因此在应用可构造其代理损失（surrogate loss）</p>
<h2 id="后向传播"><a href="#后向传播" class="headerlink" title="后向传播"></a>后向传播</h2><p>后向传播算法是将输出层的误差向后进行传播来实现权重的调整，使得网络输出的样本标签与实际标签相靠拢。后向传播算法就是以网络误差平方为目标函数、采用梯度下降法来计算损失函数的最小值。</p>
<p>论文原文：</p>
<blockquote>
<p>repeatedly adjusts the weights of the connections in the network so as to minimize a measure of the difference between the actual output vector of the net and the desired output vector.</p>
</blockquote>
<p>BP算法存在的问题：</p>
<ol>
<li>梯度越来越稀疏：从顶层越往下，误差校正信号越来越小；</li>
<li>容易收敛到局部最小值：尤其是从远离最优区域开始的时候（随机值初始化会导致这种情况的发生）；</li>
<li>一般只能用有标签的数据来训练，也就是监督学习。</li>
</ol>
<p>复杂的神经网络难以用反向传播算法来训练，对于一个 deep network（7层以上），残差传播到最前面的层已经变得太小，出现所谓的 gradient diffusion（梯度扩散），所以深度学习一般不用它。</p>
<p>参考：<a href="https://blog.csdn.net/ACM_hades/article/details/91049013">【深度学习】后向传播(BP)算法</a></p>
<h3 id="梯度下降法"><a href="#梯度下降法" class="headerlink" title="梯度下降法"></a>梯度下降法</h3><p>梯度下降法的基本思想可以类比为一个下山的过程。<br>假设：一个人在山顶，需要从山上下到最低处。但下山的路径无法确定，需要利用自己周围的信息去找到下山的路径。<br>这时，以当前所处的位置为基准，寻找四周最陡峭的地方，然后朝最陡峭的地方走，每走一段距离，就再次寻找最陡峭的地方，继续朝最陡峭的地方走，如此反复，最后就能快速的下到山底。</p>
<p>对于一个代表误差的函数，需要快速减小误差，使得误差最小，那么使用梯度下降法，不断朝着下降最剧烈的方向移动，最后能够到达一个函数图像局部最低点。</p>
<p>参考：<a href="https://zhuanlan.zhihu.com/p/335191534">通俗易懂讲解梯度下降法</a></p>
<h3 id="激活函数"><a href="#激活函数" class="headerlink" title="激活函数"></a>激活函数</h3><p>激活函数负责将神经元的输入映射到输出端。前一层的输入传播到一个神经元，神经元对输入按不同权重计算后，再用激活函数再次计算以输出到下一层。<br>引入激活函数是为了增加神经网络模型的非线性。没有激活函数的每层都相当于矩阵相乘。<br>激活函数有多种，如：Sigmoid函数、Tanh函数、ReLU(The Rectified Linear Unit)函数</p>
<p>参考：<br><a href="https://zhuanlan.zhihu.com/p/428448728">ReLU激活函数</a><br><a href="https://cloud.tencent.com/developer/article/1800954">深度学习领域最常用的10个激活函数</a></p>
<hr style=" border:solid; width:100px; height:1px;" color=#000000 size=1">

<h1 id="深度学习的几种方法"><a href="#深度学习的几种方法" class="headerlink" title="深度学习的几种方法"></a>深度学习的几种方法</h1><h2 id="卷积神经网络-CNN"><a href="#卷积神经网络-CNN" class="headerlink" title="卷积神经网络 - CNN"></a>卷积神经网络 - CNN</h2><p>参考：<a href="https://easyai.tech/ai-definition/cnn/">卷积神经网络 – Convolutional Neural Network | CNN</a></p>
<h2 id="循环神经网络-–-RNN"><a href="#循环神经网络-–-RNN" class="headerlink" title="循环神经网络 –  RNN"></a>循环神经网络 –  RNN</h2><p>参考：<a href="https://easyai.tech/ai-definition/rnn/">循环神经网络 – Recurrent Neural Network | RNN</a></p>
<h2 id="生成对抗网络-–-GANs"><a href="#生成对抗网络-–-GANs" class="headerlink" title="生成对抗网络 – GANs"></a>生成对抗网络 – GANs</h2><p>参考：<a href="https://easyai.tech/ai-definition/gan/">生成对抗网络 – Generative Adversarial Networks | GAN</a></p>
<h2 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h2><p>参考：<br><a href="https://easyai.tech/ai-definition/reinforcement-learning/">强化学习-Reinforcement learning | RL</a><br><a href="https://www.cnblogs.com/jinxulin/p/3511298.html">什么是增强学习（Reinforcement Learning）</a></p>
<h1 id="pytorch-的使用"><a href="#pytorch-的使用" class="headerlink" title="pytorch 的使用"></a>pytorch 的使用</h1><p>谷歌的 Tensorflow 与 Facebook 的 PyTorch 是颇受欢迎的两种深度学习框架。Tensorflow 的学习曲线比 PyTorch 更难一点，但学习资源可能相对更多。如果为了入门和快速上手，建议使用 pytorch 进行学习。</p>
<p>帮助：<br><a href="https://www.cnblogs.com/nickchen121/p/14662511.html">PyTorch从入门到放弃（目录）</a><br><a href="https://www.bilibili.com/video/BV1UE411N7pD">Deeplizard《Pytorch神经网络高效入门教程》中文字幕版</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>进入<a href="https://pytorch.org/get-started/locally/">官网</a>，在表格中选择你电脑配置对应的 “Your OS、Package、Compute Platform” 等，随后底下会列出相应环境安装所需要使用的命令。</p>
<p>如选择</p>
<table>
<thead>
<tr>
<th>-</th>
<th>选项</th>
</tr>
</thead>
<tbody><tr>
<td>PyTorch Build</td>
<td>Stable (1.10)</td>
</tr>
<tr>
<td>Your OS</td>
<td>Windows</td>
</tr>
<tr>
<td>Package</td>
<td>Pip</td>
</tr>
<tr>
<td>Language</td>
<td>Python</td>
</tr>
<tr>
<td>Compute Platform</td>
<td>CPU</td>
</tr>
<tr>
<td>Run this Command:</td>
<td>pip3 install torch torchvision torchaudio</td>
</tr>
</tbody></table>
<p>那么在终端输入给出的命令即可，建议拆开来分别下载，那样一个出问题不容易影响到别的，如下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install torch</span><br><span class="line">pip3 install torchvision</span><br><span class="line">pip3 install torchaudio</span><br></pre></td></tr></table></figure>
<p>其中 torchvision 用于处理图像视频，torchvideo 处理音频，还有处理自然语言的 torchtext 等，根据需要斟酌选择。需要保证 torch 库和其他库的版本对应</p>
<p>下载可能会很慢，可以直接换源下载，如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install torch -i https://mirrors.cloud.tencent.com/pypi/simple</span><br></pre></td></tr></table></figure>
<p>torch 用原来的源下载很慢，但其他包如 torchvision 等不换源下载的速度似乎快的多。</p>
<p>而如果给出的命令里有一个下载链接，也可以点开链接，找到要下载的内容安装包，点击下载，在下载到本地后再次使用命令安装本地包。</p>
<p>如上述选择的 Compute Platform 改成 CUDA 后， 给出的命令里会有个链接：<a href="https://download.pytorch.org/whl/cu113/torch_stable.html">https://download.pytorch.org/whl/cu113/torch_stable.html</a><br>在里面搜索你需要的内容，如果不知道要哪个安装包，终端直接输入官网原来给出的命令，下载提示里会有相应的包名。</p>
<p>比如下载了 torch-1.10.0-cp37-cp37m-win_amd64.whl，那么本地安装时进入到相应目录，输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install torch-1.10.0-cp37-cp37m-win_amd64.whl</span><br></pre></td></tr></table></figure>

<p>注1：如果在云服务器上安装时报错，如报错：</p>
<blockquote>
<p>PermissionError: [Errno 13] Permission denied: ‘/usr/local/lib/python3.6/site-packages/xxx.py’</p>
</blockquote>
<p>这是由于用户权限的问题，可以增加参数 –user： </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install --user xxxPackage</span><br></pre></td></tr></table></figure>

<p>注2：如果 python 在 pip 安装 pytorch 时失败，并显示 killed ，这是缓存不足的原因，可以加上 –no-cache-dir 试试：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install torch --no-cache-dir</span><br></pre></td></tr></table></figure>

<p>注3：如果安装 torchvision 等时提示 pillow，jpeg，Python.h 等关键词并失败，那么可能需要安装一些依赖包，参考：<a href="https://blog.csdn.net/qq_15557299/article/details/121743835">The headers or library files could not be found for jpeg</a>，如：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install --user Pillow</span><br><span class="line">yum install libjpeg-devel</span><br><span class="line">yum install python-devel</span><br></pre></td></tr></table></figure>



<h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><p>待修改······</p>
<p>使用教程和基础概念参考：<a href="https://pytorch.apachecn.org/">PyTorch 中文教程 &amp; 文档</a></p>
<p>PyTorch 和 Numpy 有一些关联，可以先适当了解一下 Numpy ，参考 <a href="https://www.numpy.org.cn/user/setting-up.html">NumPy 官方中文文档</a></p>
<h3 id="前置设置"><a href="#前置设置" class="headerlink" title="前置设置"></a>前置设置</h3><p>想运行别人的代码但没有 CPU 并因此报错：<br><a href="https://blog.csdn.net/weixin_50635872/article/details/108607340">Pytorch/Torch：电脑无 cuda 情况下，使用 CPU 运行</a></p>
<p>使用多 GPU 训练：<br><a href="https://blog.csdn.net/wangkaidehao/article/details/104411682">Pytorch多GPU计算之torch.nn.DataParallel()</a><br><a href="https://blog.csdn.net/qq_40676033/article/details/120166189">Pytorch 多卡训练原理与实现</a><br>第一张 GPU 会负责输出，所以一部分工作量会集中在第一张 GPU 卡上。</p>
<h3 id="读取数据集"><a href="#读取数据集" class="headerlink" title="读取数据集"></a>读取数据集</h3><p>参考：<br><a href="https://blog.csdn.net/weixin_42111770/article/details/121754627">Pytorch 加载图像数据（ImageFolder和Dataloader）</a><br><a href="https://blog.csdn.net/qq_37555071/article/details/107532319">PyTorch之torchvision.transforms详解[原理+代码实现]</a></p>
<h3 id="保存数据集"><a href="#保存数据集" class="headerlink" title="保存数据集"></a>保存数据集</h3><p>参考：<a href="https://blog.csdn.net/ayayayayo/article/details/107807599">【Pytorch】torchvision.utils.save_image直接保存 tensor 为图片</a></p>
<h3 id="加载和保存训练的模型"><a href="#加载和保存训练的模型" class="headerlink" title="加载和保存训练的模型"></a>加载和保存训练的模型</h3><p>参考：<a href="https://blog.csdn.net/weixin_41519463/article/details/103205665">PyTorch保存和加载模型(全面汇总)</a></p>
<h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>待补充······</p>
<p>获取数据集：<br>首先要有数据集用于训练，如果想自己生成数据集，或许可以使用 <a href="http://www.jinglingbiaozhu.com/">精灵标注助手</a> 自行进行对图片、文本、视频的位置标注，可以导出成 XML、JSON、MongoDB。<br>参考：<a href="https://blog.csdn.net/TangLingBo/article/details/107318200">pytorch 图片标注和 yolov3 目标检测教程</a></p>
<ol>
<li><p>图像风格转换：<br><a href="https://pytorch.org/tutorials/advanced/neural_style_tutorial.html">pytorch官网 —— NEURAL TRANSFER USING PYTORCH</a><br><a href="https://blog.csdn.net/ssunshining/article/details/109859168">图像风格迁移——pytorch实现(同上)</a><br><a href="https://www.cnblogs.com/z941030/p/7056814.html">基于深度学习的图像风格转换</a><br><a href="https://blog.csdn.net/shenxiaolu1984/article/details/52090012">【深度学习】A neural algorithm of artistic style算法详解</a></p>
</li>
<li><p>图像识别：<br>听说有个 yolo 框架</p>
</li>
</ol>
<ol start="3">
<li>AI 换脸：<br>deepfake 自然最出名。<br><a href="https://github.com/Oldpan/Faceswap-Deepfake-Pytorch">Oldpan / Faceswap-Deepfake-Pytorch —— Github</a><br>注意：里头的训练好的 300M 模型链接是 <a href="https://pan.baidu.com/s/197RIMB_Po96RZNFzV-wqjA">百度网盘</a>  密码 z4wa</li>
</ol>
<ol start="4">
<li><p>通用深度隐写术在隐写术和水印等的应用：<br><a href="https://github.com/ChaoningZhang/Universal-Deep-Hiding">UDH: Universal Deep Hiding for Steganography, Watermarking, and Light Field Messaging</a></p>
</li>
<li><p>大姿态下人脸快速对齐人脸生成模型方案：<br><a href="https://github.com/cleardusk/3DDFA_V2">3DDFA —— Github</a></p>
</li>
</ol>
<h2 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h2><p>通常建议使用服务器进行训练，这样可以少占用自己的计算机资源。<br>如果没有服务器，也可以考虑百度的 paddle 平台，不过需要重新学习它的框架，有学习成本：<br><a href="https://www.paddlepaddle.org.cn/">开源深度学习平台飞桨</a></p>
<p>可以通过答题获得试用算力：<br><a href="https://aistudio.baidu.com/aistudio/learnmap">飞桨AI Studio - 人工智能学习实训社区</a></p>
<p>也可以购买云服务器。<br>比如腾讯新用户或购买新产品有时有抢购优惠，2核 4G 80GB 1兆带宽 轻量应用服务器 74元/年，阿里云什么的也有类似的活动。<br><a href="https://cloud.tencent.com/act/new">云产品首单秒杀_云服务器秒杀_云数据库秒杀- 腾讯云</a></p>
<p>尽管便宜的服务器性能训练起来速度很慢，不过在别的地方服务器也能发挥作用，我打算出一篇关于云服务器的运用文章，待补······</p>
<p>另外，建议下载一些别人训练好的模型参数，并以此作为训练模型的初始参数，这样训练会快些。</p>
<h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><p>使用 top 命令查看 cpu 等使用情况，参考：<a href="https://blog.csdn.net/zmhzmhzm/article/details/113465451">Linux top指令交互界面常用操作</a></p>
<p>Linux 下让进程后台执行并实时刷新输出到文件中：nohup unbuffer command &gt; file.out 2&gt;&amp;1 &amp;<br>其中 unbuffer 需要额外安装 expect-devel，以实时刷新。<br>参考：<br><a href="https://www.cnblogs.com/presleyren/p/10966148.html">Linux 后台运行</a><br><a href="https://blog.csdn.net/lonnng2004/article/details/108204488">Linux实时将所有输出重定向到文件</a></p>
<p>将 print 输出的内容保存到文件中，可以参考:<br><a href="https://blog.csdn.net/w76190504/article/details/81085055">python 将 print输出的内容保存到txt文件中</a><br><a href="https://blog.csdn.net/xu380393916/article/details/100887083">python3 将print打印的内容保存到日志</a><br>Linux 下也可以使用标准输出（STDOUT）重定向，如 server.py &gt;python.log</p>
<h1 id="课外阅读"><a href="#课外阅读" class="headerlink" title="课外阅读"></a>课外阅读</h1><p><a href="https://blog.csdn.net/u010177286/article/details/79304778">机器学习基本概念知识汇</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/290011942">样本量极少如何机器学习？</a>：通过将有限的监督信息（小样本）与先验知识（无标记或弱标记样本、其他数据集和标签、其他模型等）结合，使得模型可以有效的学习小样本中的信息。</p>
<p><a href="https://blog.csdn.net/weixin_44211968/article/details/121314757">【机器学习】Few-shot learning（少样本学习）</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/258562899">小样本学习思考总结（FSL）</a></p>
]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>Deep learning</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
        <tag>Deep learning</tag>
      </tags>
  </entry>
  <entry>
    <title>安装kali linux后的准备操作</title>
    <url>/2020/05/07/2020-05-07/</url>
    <content><![CDATA[<h1 id="桥接老式无线路由器教程"><a href="#桥接老式无线路由器教程" class="headerlink" title="桥接老式无线路由器教程"></a>桥接老式无线路由器教程</h1><p>主wifi在大厅里，待在房间里时wifi信号不太好，必须靠近大厅才能收到比较快的信号。正好有换下来的老式wifi，就打算在房间里进行无线桥接。网上的教程稀烂，我东拼西凑，尝试了一个下午才桥接成功，这里记录下来，希望后人能轻松点。不过现在的新款路由器大都能一键桥接，倒不用那么麻烦。</p>
<span id="more"></span>

<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p> 接下来我会管大厅的路由器叫主路由器或原路由器，房间里的路由器叫新增路由器。搜索一下如何进入自己品牌型号的<strong>路由器的管理页面</strong>，有的是路由器LAN口的ip地址，一般都是192.168.0.1、192.168.1.1这样的，有的是个域名，比如tplogin.cn，新款的还要下载app。最好上网查询这个型号的路由器设置页面怎么进，但有的只能在浏览器输入路由器LAN口的ip地址来访问（<strong>注意</strong>：后面会改路由器LAN口的ip地址，那么登录页面就会变成新的ip地址了，所以要记住自己改成什么了）。<br> 一般登录用户名都是admin，如果要密码，一般默认是123456或者admin之类的，如果不知道，可以打电话问服务商，不过可以按reset重置为默认密码（<strong>注意</strong>：对主路由器的reset重置对有的用户是<strong>高危行为</strong>，可能会导致需要工作人员重新为你家拉一条网线，当然现在很少了，不过还是建议三思）。我的两个路由器都是TP-LINK的。建议在电脑上弄，当然手机也可以。</p>
<h2 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h2><ol>
<li><strong>主路由器不需要做任何改动</strong>，但是要知道相应信息，比如原路由器LAN口的ip地址等，可以登陆到原路由器的管理设置页面拍下来。</li>
<li>新增路由器插电，电脑连上这个新路由器的wifi（当然，还不能上网），进新增的<strong>路由器管理设置页面</strong>。</li>
<li>进LAN口设置，改ip地址为原路由器LAN口ip地址的<strong>同一网段</strong>（这里指ip地址前三位）下的地址，但<strong>不能重合</strong>（ip地址共四位，最后一位改变，前三位不变。如，原路由器LAN口地址是192.168.10.1，那么新路由器LAN口地址就改成192.168.10.2（可以把2改成别的，但不能是1））。具体讲同一网段指的是几个IP地址和子网掩码相与都能得到同样的网络地址。<br><img src="https://img-blog.csdnimg.cn/20200507204122502.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2thaWhhbmdfY2Fp,size_16,color_FFFFFF,t_70" alt="LAN口设置"></li>
<li>进<strong>DHCP服务器</strong>修改页面，<strong>修改地址池开始、结束地址</strong>为原路由器的同一网段（可认为是ip地址前三位）下但范围不重合地址（ip范围不能出现重合）的区域。<br>比如原路由器地址池是192.168.10.100 到 192.168.10.199，那么新增路由器就可以改为192.168.10.200到192.168.10.230。用230减去200再加1，即31就是这个wifi能连网（能被分配ip地址）的设备数量。注意尽量不要分配到240之后，因为后面的ip地址（前面的一些，比如0也是）维修什么的可能要用。<br>修改DHCP服务这个步骤很多教程没提到，或许有些确实不用改也可以，如果不开启DHCP服务就会由主路由器分配ip地址。<br><img src="https://img-blog.csdnimg.cn/20200507203900934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2thaWhhbmdfY2Fp,size_16,color_FFFFFF,t_70" alt="DHCP服务器"></li>
<li>同样上图中页面，修改<strong>新路由器网关</strong>为原路由器LAN口的ip地址（很重要，比如改成192.168.10.1），<strong>DNS与备用DNS</strong>也都填原路由器的两个DNS。</li>
<li>找到<strong>WDS选项</strong>，点击开启，再点击扫描，找到原路由器的SSID—就是原路由器的wifi名字，有密码输密码，保存（它可能会提示消息要改<strong>信道</strong>，我选了1，如果不行多换几个试试），重启新增路由器。<br><img src="https://img-blog.csdnimg.cn/20200507203155672.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2thaWhhbmdfY2Fp,size_16,color_FFFFFF,t_70" alt="WDS"></li>
<li>重启后要进路由器设置页面，就得填自己修改后的LAN口的ip地址了。可以给新增路由器加个密码什么的。如果想实现无缝连接——就是大厅、房间来回走也可以自动重连新wifi，那么可以把新增wifi的名字和密码都改为原路由器的名字和密码。（如果不行，搜索对应教程看看哪里还需要修改）</li>
<li>重启后连上新增路由器的wifi，开个网站试试看能不能联网，不行的话检查一下哪个步骤有失误，或者再搜索自己品牌型号路由器的桥接教程看看有什么不一样。</li>
<li>可以尝试看看我新建的另一个博客<a href="%5B%E6%B3%A82%EF%BC%9A%E4%B8%8D%E5%B0%8F%E5%BF%83%E6%94%B9%E5%BA%9F%E4%BA%86%EF%BC%8C%E6%94%B9%E9%94%99%E4%BA%86%EF%BC%8C%E4%B8%8D%E8%AE%B0%E5%BE%97%E4%BA%86%EF%BC%8C%E6%8C%89%E6%96%B0%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84reset%EF%BC%8C%E5%B0%B1%E5%8F%AF%E6%81%A2%E5%A4%8D%E9%BB%98%E8%AE%A4%E8%AE%BE%E7%BD%AE%EF%BC%8C%E5%86%8D%E9%87%8D%E6%96%B0%E8%AE%BE%E7%BD%AE%E5%8D%B3%E5%8F%AF%5D(https://ntjd.github.io)">^1</a><a href="%5B%E6%B3%A84%EF%BC%9A%E5%90%8E%E6%9D%A5%EF%BC%8C%E6%88%91%E9%87%8D%E6%96%B0%E6%89%BE%E5%88%B0%E4%BA%86%E4%B8%80%E7%AF%87%E5%BE%88%E8%AF%A6%E7%BB%86%E7%9A%84%E6%95%99%E7%A8%8B%EF%BC%8C%E5%8F%AF%E8%83%BD%E6%88%91%E5%BE%97%E6%94%B9%E4%B8%AA%E6%A0%87%E9%A2%98%E3%80%82%E8%A6%81%E6%98%AF%E4%B9%8B%E5%89%8D%E8%83%BD%E6%89%BE%E5%88%B0%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E5%B0%B1%E5%A5%BD%E4%BA%86%5D(https://zhuanlan.zhihu.com/p/46501763)">^3</a>：<a href="https://ntjd.github.io/">https://ntjd.github.io</a><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2>可以在房间里愉快地上网了，用speedtest测了网速，快了好几倍，自此几个月，都没出现突然断网的情况了。<br><img src="https://img-blog.csdnimg.cn/20200507204807780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2thaWhhbmdfY2Fp,size_16,color_FFFFFF,t_70" alt="无线状态"><h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2>后面停电了一次，来电后突然就无法联网了。登录设置页面一看，原来是原路由器上电后信道改成了11，把新路由器的信道同样改为11，重启后就可以了。主路由器重启、更新设置等导致联网出现问题的，重新按步骤再桥接一次即可。可以将一些选项的自动分配改为手动输入，这样主路由器重上电后就不会自动更改设置导致桥接失败。</li>
</ol>
]]></content>
      <categories>
        <category>Others</category>
        <category>router</category>
      </categories>
      <tags>
        <tag>router</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习与数据挖掘初探</title>
    <url>/2021/11/21/2021-11-21/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>帮助：<br><a href="https://easyai.tech/ai-definition">AI 知识库</a><br><a href="https://wizardforcel.gitbooks.io/dm-algo-top10/content/index.html">数据挖掘十大算法详解</a></p>
<span id="more"></span>

<h1 id="sklearn"><a href="#sklearn" class="headerlink" title="sklearn"></a>sklearn</h1><p>sklearn (scikit-learn) 是基于 Python 语言的机器学习工具</p>
<p>帮助：<br><a href="https://sklearn.apachecn.org/">scikit-learn (sklearn) 官方文档中文版</a><br><a href="https://blog.csdn.net/algorithmPro/article/details/103045824">sklearn介绍</a></p>
<h2 id="SVM"><a href="#SVM" class="headerlink" title="SVM"></a>SVM</h2><p>实现样例参考：<a href="https://blog.csdn.net/moriarty_jack/article/details/108432867">sklearn SVM原理与实现</a></p>
<h1 id="课外阅读"><a href="#课外阅读" class="headerlink" title="课外阅读"></a>课外阅读</h1><p><a href="https://www.cnblogs.com/jinxulin/p/3511298.html">什么是增强学习（Reinforcement Learning）</a></p>
]]></content>
      <categories>
        <category>Machine Learning</category>
        <category>Data mining</category>
      </categories>
      <tags>
        <tag>Machine Learning</tag>
        <tag>Data mining</tag>
      </tags>
  </entry>
</search>
